{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{Modal,Button,Form,Alert}from'react-bootstrap';import{Typeahead}from'react-bootstrap-typeahead';import{FaEdit,FaTrash,FaPlus}from'react-icons/fa';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Sales(){const[sales,setSales]=useState([]);const[customers,setCustomers]=useState([]);const[containers,setContainers]=useState([]);const[showModal,setShowModal]=useState(false);const[isEditing,setIsEditing]=useState(false);const[editMode,setEditMode]=useState(false);const[selectedSalesIds,setSelectedSalesIds]=useState([]);const[checkAll,setCheckAll]=useState(false);const[showDeleteSelectedModal,setShowDeleteSelectedModal]=useState(false);const[deleting,setDeleting]=useState(false);const[deleteProgress,setDeleteProgress]=useState(0);const[deleteSuccess,setDeleteSuccess]=useState(false);const[showSuccessModal,setShowSuccessModal]=useState(false);const[successMessage,setSuccessMessage]=useState('');const[currentSale,setCurrentSale]=useState({date:new Date().toISOString().split('T')[0],customerId:'',containerId:'',type:'Delivery',item:'',quantity:1,pricePerUnit:0,totalAmount:0,paymentMethod:'Cash',status:'Paid',remarks:''});const[saleToEditId,setSaleToEditId]=useState(null);const[showDeleteModal,setShowDeleteModal]=useState(false);const[saleToDelete,setSaleToDelete]=useState(null);const[showMultiAddModal,setShowMultiAddModal]=useState(false);const[multiSalesInput,setMultiSalesInput]=useState('');const[importProgress,setImportProgress]=useState(0);const[showImportResultModal,setShowImportResultModal]=useState(false);const[importResult,setImportResult]=useState({successCount:0,failedLine:null,errorMessage:''});const[currentSaleId,setCurrentSaleId]=useState(null);const[showAddCustomerModal,setShowAddCustomerModal]=useState(false);const[currentCustomer,setCurrentCustomer]=useState({name:'',nickname:'',phone:'',address:'',landmark:'',birthday:'',remarks:''});const itemColors={\"Refill (Slim 5gal)\":\"#00499cff\",\"Refill (Round 5gal)\":\"#00b3ffff\",\"New (Slim 5gal)\":\"#4aec70ff\",\"New (Round 5gal)\":\"#28a745\",\"Dispenser\":\"#15e8d3ff\",\"Bottled Water (500mL)\":\"#905df7ff\",\"Bottled Water (1000mL)\":\"#4f26a0ff\"// add other items as needed\n};// ===============================\n// LOAD SALES & CUSTOMERS\n// ===============================\nuseEffect(()=>{fetchSales();fetchCustomers();},[]);const fetchSales=async()=>{try{const res=await axios.get('http://localhost:3001/api/sales');setSales(res.data);}catch(err){console.error(err);}};const fetchCustomers=async()=>{try{const res=await axios.get('http://localhost:3001/api/customers');setCustomers(res.data);}catch(err){console.error(err);}};const fetchContainers=async()=>{try{const res=await axios.get('http://localhost:3001/api/inventory');setContainers(res.data);}catch(err){console.error(err);}};useEffect(()=>{fetchSales();fetchCustomers();fetchContainers();// load containers\n},[]);// ===============================\n// HANDLERS\n// ===============================\nconst handleShowAddModal=()=>{setIsEditing(false);setCurrentSale({name:'',date:new Date().toISOString().split('T')[0],customerId:'',containerId:'',type:'Delivery',item:'Refill (Slim 5gal)',quantity:1,pricePerUnit:0,totalAmount:0,paymentMethod:'Cash',status:'Paid',remarks:''});setShowModal(true);};const handleShowEditModal=sale=>{var _sale$customerId,_sale$containerIds;//  if (containers.length === 0) {\n//     alert(\"Containers not loaded yet. Please wait.\");\n//     return;\n//   }else{\n//     alert(\"Containers are loaded.\");\n//     console.log(\"Sale.containerIds:\", sale.containerIds);\n//   }\nsetIsEditing(true);setSaleToEditId(sale._id);setCurrentSale({date:sale.date?sale.date.substring(0,10):new Date().toISOString().split('T')[0],customerId:((_sale$customerId=sale.customerId)===null||_sale$customerId===void 0?void 0:_sale$customerId._id)||'',customerName:sale.customerName||'',type:sale.type,item:sale.item||'',quantity:sale.quantity,pricePerUnit:sale.pricePerUnit||0,totalAmount:sale.totalAmount,paymentMethod:sale.paymentMethod,status:sale.status,customerContainerQty:sale.customerContainerQty||0,containerIds:((_sale$containerIds=sale.containerIds)===null||_sale$containerIds===void 0?void 0:_sale$containerIds.map(c=>c._id||c))||[],remarks:sale.remarks||''});setShowModal(true);};const handleSaveSale=async()=>{try{const calculatedPricePerUnit=currentSale.totalAmount&&currentSale.quantity?currentSale.totalAmount/currentSale.quantity:0;const saleToSave={...currentSale,pricePerUnit:calculatedPricePerUnit,customerId:currentSale.customerId||null,customerName:currentSale.customerName||'',customerContainerQty:currentSale.customerContainerQty||0};if(isEditing){await axios.put(`http://localhost:3001/api/sales/${saleToEditId}`,saleToSave);}else{await axios.post('http://localhost:3001/api/sales',saleToSave);}setShowModal(false);fetchSales();}catch(err){console.error(err);}};const handleDeleteClick=sale=>{setSaleToDelete(sale);setShowDeleteModal(true);};const handleDeleteSale=async()=>{try{await axios.delete(`http://localhost:3001/api/sales/${saleToDelete._id}`);setShowDeleteModal(false);setSaleToDelete(null);fetchSales();}catch(err){console.error(err);}};const handleMultiSalesImport=async()=>{if(!multiSalesInput){alert('Please enter sales records first.');return;}let importing=true;// 🔑 local synchronous flag to avoid React async delays\nconst lines=multiSalesInput.trim().split('\\n');let successCount=0;try{console.log(\"Starting import...\");for(let i=0;i<lines.length;i++){if(!importing){console.log('Import stopped by user.');break;}const line=lines[i];const[date,customerName,type,item,quantity,totalAmount,paymentMethod,status,containersField,remarks]=line.split(';').map(f=>f.trim());// Process containers field\nlet customerContainerQty=0;let containerIds=[];if(containersField){const containersArray=containersField.split(',').map(c=>c.trim());containersArray.forEach(c=>{if(c.toLowerCase().startsWith('z')){customerContainerQty=parseInt(c.substring(1))||0;}else{const containerObj=containers.find(cont=>cont.id===c||cont.name===c||cont._id===c);if(containerObj){containerIds.push(containerObj._id);}else{containerIds.push(c);}}});}// Calculate\nconst qty=parseInt(quantity);const total=parseFloat(totalAmount);const pricePerUnit=qty!==0?total/qty:0;const customer=customers.find(c=>c.name.toLowerCase()===customerName.toLowerCase());const sale={date:date||new Date().toISOString().split('T')[0],customerId:customer?customer._id:null,customerName:customer?customer.name:customerName,type:type||'Walk-in',item:item||'',quantity:qty||1,totalAmount:total||0,pricePerUnit:pricePerUnit||0,paymentMethod:paymentMethod||'Cash',status:status||'Paid',customerContainerQty,containerIds,remarks:remarks||''};await axios.post('http://localhost:3001/api/sales',sale);successCount++;// Update progress bar\nsetImportProgress(Math.round((i+1)/lines.length*100));}// Show success modal if all completed\nif(successCount===lines.length){setImportResult(prev=>({...prev,successCount}));setShowMultiAddModal(false);setShowImportResultModal(true);}fetchSales();}catch(err){console.error(err);alert('Error importing sales. Check console for details.');}};const handleAddCustomer=async()=>{try{// 1. Create the new customer\nconst res=await axios.post('http://localhost:3001/api/customers',currentCustomer);const newCustomer=res.data;// 2. Update the sale with new customerId and customerName\nawait axios.put(`http://localhost:3001/api/sales/${currentSaleId}`,{customerId:newCustomer._id,customerName:newCustomer.name});// 3. Fetch the fully populated updated sale\nconst populatedSaleRes=await axios.get(`http://localhost:3001/api/sales/${currentSaleId}`);const populatedSale=populatedSaleRes.data;// 4. Update sales state locally to reflect immediately\nsetSales(prevSales=>prevSales.map(s=>s._id===populatedSale._id?populatedSale:s));// 🔁 Re-fetch inventory to update name link\nfetchSales();// 5. Close modal and reset\nsetShowAddCustomerModal(false);setCurrentCustomer({});setCurrentSaleId(null);setSuccessMessage('Customer added and sale updated!');setShowSuccessModal(true);}catch(err){console.error(err);alert('Error adding customer.');}};// ===============================\n//            RENDER\n// ===============================\nreturn/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Sales\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:handleShowAddModal,children:\"Add Sale\"}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:()=>{setImportProgress(0);// reset progress\nsetShowMultiAddModal(true);},children:\"Add Multiple Sales\"}),/*#__PURE__*/_jsx(Button,{variant:editMode?\"danger\":\"warning\",className:\"ms-2\",onClick:()=>{setEditMode(!editMode);setSelectedSalesIds([]);setCheckAll(false);},children:editMode?\"Exit Edit Mode\":\"Edit Mode\"}),editMode&&/*#__PURE__*/_jsx(Button,{variant:\"secondary\",className:\"ms-2\",disabled:selectedSalesIds.length===0||deleting,onClick:()=>setShowDeleteSelectedModal(true),children:deleting?'Deleting...':`Delete Selected (${selectedSalesIds.length})`}),deleting&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3\",style:{width:'300px'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"progress-bar bg-danger\",role:\"progressbar\",style:{width:`${deleteProgress}%`},\"aria-valuenow\":deleteProgress,\"aria-valuemin\":\"0\",\"aria-valuemax\":\"100\",children:[deleteProgress,\"%\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-2\",children:\"Deleting... Please wait.\"})]}),deleteSuccess&&/*#__PURE__*/_jsx(Alert,{variant:\"success\",className:\"mt-3\",children:\"Selected items deleted successfully!\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"table table-hover mt-3\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[editMode&&/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",checked:checkAll,onChange:e=>{const allIds=sales.map(s=>s._id);setCheckAll(e.target.checked);if(e.target.checked){setSelectedSalesIds(allIds);}else{setSelectedSalesIds([]);}}})}),/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Customer Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Item\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Quantity\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Price Per Unit\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Payment\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Containers\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Remarks\"}),editMode&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:sales//.sort((a, b) => new Date(a.date) - new Date(b.date))\n.sort((a,b)=>{var _a$customerName,_b$customerName;// 1️⃣ Compare names (case-insensitive)\nconst nameA=((_a$customerName=a.customerName)===null||_a$customerName===void 0?void 0:_a$customerName.toLowerCase())||'';const nameB=((_b$customerName=b.customerName)===null||_b$customerName===void 0?void 0:_b$customerName.toLowerCase())||'';if(nameA<nameB)return-1;if(nameA>nameB)return 1;// 2️⃣ If names are the same, compare dates\nconst dateA=new Date(a.date);const dateB=new Date(b.date);return dateA-dateB;}).map(s=>{var _s$pricePerUnit;const isChecked=selectedSalesIds.includes(s._id);return/*#__PURE__*/_jsxs(\"tr\",{children:[editMode&&/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",checked:isChecked,onChange:e=>{if(e.target.checked){const newSelected=[...selectedSalesIds,s._id];setSelectedSalesIds(newSelected);if(newSelected.length===sales.length){setCheckAll(true);}}else{const newSelected=selectedSalesIds.filter(id=>id!==s._id);setSelectedSalesIds(newSelected);setCheckAll(false);}}})}),/*#__PURE__*/_jsx(\"td\",{children:new Date(s.date).toLocaleDateString('en-US',{month:'long',day:'2-digit',year:'numeric'})}),/*#__PURE__*/_jsx(\"td\",{children:(()=>{const customer=customers.find(c=>{var _s$customerId;return c._id===(((_s$customerId=s.customerId)===null||_s$customerId===void 0?void 0:_s$customerId._id)||s.customerId);});if(customer){return/*#__PURE__*/_jsx(\"a\",{href:`/customers/${customer._id}/profile`,style:{textDecoration:'underline'},children:customer.name});}else{return s.customerName||'-';}})()}),/*#__PURE__*/_jsx(\"td\",{children:s.type}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{style:{display:\"inline-block\",backgroundColor:itemColors[s.item]||\"#ccc\",// default gray if not found\ncolor:\"white\",borderRadius:\"15px\",padding:\"2px 8px\",fontSize:\"1rem\"},children:s.item})}),/*#__PURE__*/_jsx(\"td\",{children:s.quantity}),/*#__PURE__*/_jsxs(\"td\",{className:\"text-muted\",children:[\"\\u20B1\",((_s$pricePerUnit=s.pricePerUnit)===null||_s$pricePerUnit===void 0?void 0:_s$pricePerUnit.toFixed(2))||'0.00']}),/*#__PURE__*/_jsxs(\"td\",{children:[\"\\u20B1\",s.totalAmount]}),/*#__PURE__*/_jsx(\"td\",{children:s.paymentMethod}),/*#__PURE__*/_jsx(\"td\",{children:s.status}),/*#__PURE__*/_jsxs(\"td\",{children:[s.customerContainerQty>0&&/*#__PURE__*/_jsxs(\"span\",{children:[\"z\",s.customerContainerQty,s.containerIds&&s.containerIds.length>0?', ':'']}),s.containerIds&&s.containerIds.length>0?s.containerIds.map((c,index)=>{const cid=c._id||c;// handle object or ID\nconst container=containers.find(cont=>cont._id===cid);return container?/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"a\",{href:`/inventory/${container._id}`,style:{textDecoration:'underline'},children:container.name}),index<s.containerIds.length-1?', ':'']},cid):/*#__PURE__*/_jsxs(\"span\",{children:[cid,index<s.containerIds.length-1?', ':'']},cid);}):(!s.customerContainerQty||s.customerContainerQty===0)&&'-']}),/*#__PURE__*/_jsx(\"td\",{className:\"fst-italic\",children:s.remarks}),editMode&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"td\",{children:[!customers.some(c=>c.name.toLowerCase()===s.customerName.toLowerCase())&&/*#__PURE__*/_jsxs(Button,{variant:\"success\",size:\"sm\",onClick:()=>{setCurrentCustomer({name:s.customerName});setCurrentSaleId(s._id);setShowAddCustomerModal(true);},children:[/*#__PURE__*/_jsx(FaPlus,{}),\" \"]}),/*#__PURE__*/_jsx(Button,{variant:\"link\",size:\"sm\",onClick:()=>handleShowEditModal(s),children:/*#__PURE__*/_jsx(FaEdit,{color:\"orange\"})}),/*#__PURE__*/_jsx(Button,{variant:\"link\",size:\"sm\",onClick:()=>handleDeleteClick(s),children:/*#__PURE__*/_jsx(FaTrash,{color:\"red\"})})]})})]},s._id);})})]}),/*#__PURE__*/_jsxs(Modal,{show:showModal,onHide:()=>setShowModal(false),children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:isEditing?'Edit Sale':'Add Sale'})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Date\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"date\",value:currentSale.date,onChange:e=>setCurrentSale({...currentSale,date:e.target.value})})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Customer Name\"}),/*#__PURE__*/_jsx(Typeahead,{id:\"customer-typeahead\",labelKey:\"name\"// which property to display as label\n,options:customers// array of customers from database\n,placeholder:\"Type customer name...\",allowNew:true// allows typing new names not in the list\n,newSelectionPrefix:\"New: \",selected:(()=>{const found=customers.find(c=>c._id===currentSale.customerId);if(found){return[found];// show existing customer as selected\n}else if(currentSale.customerName){return[{name:currentSale.customerName}];// show typed name as selected\n}else{return[];// no selection\n}})(),onChange:selected=>{if(selected.length>0){const sel=selected[0];if(sel._id){setCurrentSale({...currentSale,customerId:sel._id,customerName:sel.name});}else if(sel.name){// New typed name\nsetCurrentSale({...currentSale,customerId:null,customerName:sel.name});}else if(typeof sel==='string'){// Typed raw string (edge case)\nsetCurrentSale({...currentSale,customerId:null,customerName:sel});}}else{// If cleared selection\nsetCurrentSale({...currentSale,customerId:null,customerName:''});}}})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Type\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{value:currentSale.type,variant:currentSale.type==='Walk-in'?'success':'outline-success',onClick:()=>setCurrentSale({...currentSale,type:'Walk-in'}),className:\"me-2\",children:\"Walk-in\"}),/*#__PURE__*/_jsx(Button,{variant:currentSale.type==='Delivery'?'primary':'outline-primary',onClick:()=>setCurrentSale({...currentSale,type:'Delivery'}),children:\"Delivery\"})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Item\"}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex flex-wrap\",children:[{label:\"Refill (Slim 5gal)\",bg:\"primary\"},{label:\"Refill (Round 5gal)\",bg:\"info\"},{label:\"New (Slim 5gal)\",bg:\"success\"},{label:\"New (Round 5gal)\",bg:\"success\"},{label:\"Plan A - Standard Plan\",bg:\"danger\"},{label:\"Plan B - Family Plan\",bg:\"danger\"},{label:\"Plan C - Business Plan\",bg:\"danger\"},{label:\"Plan D - Enterprise Plan\",bg:\"danger\"},{label:\"Plan E - Custom Plan\",bg:\"danger\"},{label:\"Big Cap\",bg:\"warning\"},{label:\"Small Cap\",bg:\"warning\"},{label:\"Faucet\",bg:\"warning\"},{label:\"Others\",bg:\"warning\"},{label:\"Bottled Water (500mL)\",bg:\"purple\"},{label:\"Bottled Water (1000mL)\",bg:\"purple\"},{label:\"Dispenser\",bg:\"info\"}].map(item=>{const isSelected=currentSale.item===item.label;return/*#__PURE__*/_jsx(Button,{size:\"sm\",variant:isSelected?item.bg:`outline-${item.bg}`,className:\"me-2 mb-2\",onClick:()=>setCurrentSale({...currentSale,item:item.label}),style:{backgroundColor:item.bg===\"purple\"&&isSelected?\"#d6b3ff\":item.bg===\"purple\"?\"transparent\":undefined,borderColor:item.bg===\"purple\"?\"#d6b3ff\":undefined,color:item.bg===\"purple\"&&isSelected?\"#5c2d91\":item.bg===\"purple\"?\"#5c2d91\":undefined},children:item.label},item.label);})})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Quantity\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",value:currentSale.quantity,onChange:e=>setCurrentSale({...currentSale,quantity:Number(e.target.value)})})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Total Amount\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",value:currentSale.totalAmount,onChange:e=>setCurrentSale({...currentSale,totalAmount:Number(e.target.value)})})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Payment Method\"}),/*#__PURE__*/_jsxs(Form.Select,{value:currentSale.paymentMethod,onChange:e=>setCurrentSale({...currentSale,paymentMethod:e.target.value}),children:[/*#__PURE__*/_jsx(\"option\",{children:\"Cash\"}),/*#__PURE__*/_jsx(\"option\",{children:\"GCash\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Free\"})]})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Status\"}),/*#__PURE__*/_jsxs(Form.Select,{value:currentSale.status,onChange:e=>setCurrentSale({...currentSale,status:e.target.value}),children:[/*#__PURE__*/_jsx(\"option\",{children:\"Paid\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Unpaid\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Free\"})]})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Containers\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"me-2 d-flex align-items-center\",children:/*#__PURE__*/_jsx(Form.Control,{type:\"number\",min:\"0\",placeholder:\"Owned\",value:currentSale.customerContainerQty,onChange:e=>setCurrentSale({...currentSale,customerContainerQty:Number(e.target.value)}),style:{width:\"100px\"}})}),/*#__PURE__*/_jsx(\"div\",{style:{flex:1},children:/*#__PURE__*/_jsx(Typeahead,{id:\"container-typeahead\",labelKey:option=>`${option.id} - ${option.name}`,options:containers,placeholder:\"Select containers...\",multiple:true,selected:containers.filter(c=>{var _currentSale$containe;return(_currentSale$containe=currentSale.containerIds)===null||_currentSale$containe===void 0?void 0:_currentSale$containe.includes(c._id);}),onChange:selected=>{setCurrentSale({...currentSale,containerIds:selected.map(s=>s._id)});}})})]})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Remarks\"}),/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",rows:2,value:currentSale.remarks,onChange:e=>setCurrentSale({...currentSale,remarks:e.target.value})})]})]})}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:()=>setShowModal(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:()=>{handleSaveSale();console.log(\"currentSale.containerIds\",currentSale.containerIds);console.log(\"containers\",containers);},children:\"Save\"})]})]}),/*#__PURE__*/_jsxs(Modal,{show:showDeleteModal,onHide:()=>setShowDeleteModal(false),children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Delete Sale\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:\"Are you sure you want to delete this sale?\"}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:()=>setShowDeleteModal(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",onClick:handleDeleteSale,children:\"Delete\"})]})]}),/*#__PURE__*/_jsxs(Modal,{show:showMultiAddModal,onHide:()=>setShowMultiAddModal(false),children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Add Multiple Sales\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Enter multiple sales (one per line, semicolon-separated fields: date;customer name;type;quantity;total amount;payment method;status;containers;remarks)\"}),importProgress>0&&/*#__PURE__*/_jsx(\"div\",{className:\"my-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"progress-bar progress-bar-striped progress-bar-animated\",role:\"progressbar\",style:{width:`${importProgress}%`},\"aria-valuenow\":importProgress,\"aria-valuemin\":\"0\",\"aria-valuemax\":\"100\",children:[importProgress,\"%\"]})})}),/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",rows:10,value:multiSalesInput,onChange:e=>setMultiSalesInput(e.target.value)})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",className:\"mt-2\",onClick:handleMultiSalesImport,children:\"Import Sales\"})]})}),/*#__PURE__*/_jsx(Modal.Footer,{children:/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:()=>setShowMultiAddModal(false),children:\"Close\"})})]}),/*#__PURE__*/_jsxs(Modal,{show:showImportResultModal,onHide:()=>setShowImportResultModal(false),children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Import Result\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:importResult.failedLine?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u2705 Successfully added: \",importResult.successCount]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u274C Failed at line: \",importResult.failedLine]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",importResult.errorMessage]})]}):/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u2705 All records successfully imported! Total added: \",importResult.successCount]})}),/*#__PURE__*/_jsx(Modal.Footer,{children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:()=>{setShowImportResultModal(false);setShowMultiAddModal(false);setImportProgress(0);},children:\"Close\"})})]}),/*#__PURE__*/_jsxs(Modal,{show:showDeleteSelectedModal,onHide:()=>setShowDeleteSelectedModal(false),children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Confirm Delete Selected\"})}),/*#__PURE__*/_jsxs(Modal.Body,{children:[\"Are you sure you want to delete \",selectedSalesIds.length,\" selected sale\",selectedSalesIds.length>1?'s':'',\"?\"]}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:()=>setShowDeleteSelectedModal(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",onClick:async()=>{try{setShowDeleteSelectedModal(false);setDeleting(true);setDeleteProgress(0);for(let i=0;i<selectedSalesIds.length;i++){const id=selectedSalesIds[i];await axios.delete(`http://localhost:3001/api/sales/${id}`);setDeleteProgress(Math.round((i+1)/selectedSalesIds.length*100));}setDeleteSuccess(true);setTimeout(()=>setDeleteSuccess(false),3000);fetchSales();setSelectedSalesIds([]);setCheckAll(false);}catch(err){console.error(err);alert('Error deleting selected sales.');}finally{setDeleting(false);setDeleteProgress(0);}},children:\"Confirm Delete\"})]})]}),/*#__PURE__*/_jsxs(Modal,{show:showAddCustomerModal,onHide:()=>setShowAddCustomerModal(false),children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Add Customer\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:currentCustomer.name||'',onChange:e=>setCurrentCustomer({...currentCustomer,name:e.target.value})})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Nickname\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:currentCustomer.nickname||'',onChange:e=>setCurrentCustomer({...currentCustomer,nickname:e.target.value})})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Phone\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:currentCustomer.phone||'',onChange:e=>setCurrentCustomer({...currentCustomer,phone:e.target.value})})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:currentCustomer.address||'',onChange:e=>setCurrentCustomer({...currentCustomer,address:e.target.value})})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Landmark\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:currentCustomer.landmark||'',onChange:e=>setCurrentCustomer({...currentCustomer,landmark:e.target.value})})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Frequency\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",value:currentCustomer.frequency||'',onChange:e=>setCurrentCustomer({...currentCustomer,frequency:e.target.value})})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Birthday\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"date\",value:currentCustomer.birthday||'',onChange:e=>setCurrentCustomer({...currentCustomer,birthday:e.target.value})})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Last Transaction Date\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"date\",value:currentCustomer.lastTransactionDate||'',onChange:e=>setCurrentCustomer({...currentCustomer,lastTransactionDate:e.target.value})})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Remarks\"}),/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",rows:2,value:currentCustomer.remarks||'',onChange:e=>setCurrentCustomer({...currentCustomer,remarks:e.target.value})})]})]})}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:()=>setShowAddCustomerModal(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:handleAddCustomer,children:\"Save\"})]})]}),/*#__PURE__*/_jsxs(Modal,{show:showSuccessModal,onHide:()=>setShowSuccessModal(false),children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Success\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsx(\"p\",{children:successMessage})}),/*#__PURE__*/_jsx(Modal.Footer,{children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:()=>{setShowSuccessModal(false);fetchSales();// refresh when modal is closed\n},children:\"OK\"})})]})]});}export default Sales;/*\r\n2025-07-18;John Cruz;Delivery;Refill (Slim 5gal);3;75;Cash;Paid;z2,S001;Morning delivery\r\n2025-07-18;Maria Santos;Walk-in;Refill (Round 5gal);2;50;GCash;Paid;z1,S002;Regular customer\r\n2025-07-18;Alex Dela Cruz;Delivery;New (Slim 5gal);1;200;Cash;Paid;S003;First time order\r\n2025-07-18;Jenny Lopez;Walk-in;New (Round 5gal);1;220;Cash;Paid;z1;Bought new round container\r\n2025-07-18;Mark Reyes;Delivery;Refill (Slim 5gal);5;125;GCash;Paid;z3,S004,S005;Monthly refill\r\n2025-07-18;Louie Mendoza;Walk-in;Refill (Round 5gal);4;100;Cash;Paid;z2,S006,S007;Walk-in refill\r\n2025-07-18;Cathy Villanueva;Delivery;Plan A - Standard Plan;1;350;GCash;Paid;;Subscribed to Plan A\r\n2025-07-18;Ryan Tan;Walk-in;Plan B - Family Plan;1;500;Cash;Paid;;Subscribed to Plan B\r\n2025-07-18;Mikaela Lim;Delivery;Big Cap;2;40;Cash;Paid;;Bought extra caps\r\n2025-07-18;Chris Uy;Walk-in;Small Cap;3;30;GCash;Paid;;Bought small caps\r\n2025-07-18;Daryl Ong;Delivery;Faucet;1;50;Cash;Paid;;Bought faucet\r\n2025-07-18;Shiela Gomez;Walk-in;Bottled Water (500mL);10;150;GCash;Paid;;Bought bottled water\r\n2025-07-18;Aaron Perez;Delivery;Bottled Water (1000mL);5;125;Cash;Paid;;Ordered bottled water\r\n2025-07-18;Regine Velasquez;Walk-in;Dispenser;1;1200;GCash;Paid;;Bought dispenser\r\n2025-07-18;Janine Gutierrez;Delivery;Refill (Slim 5gal);2;50;Cash;Paid;z1,S008;Regular delivery\r\n2025-07-18;Enrique Gil;Walk-in;New (Slim 5gal);1;200;Cash;Paid;S009;Bought new slim container\r\n2025-07-18;Liza Soberano;Delivery;Plan C - Business Plan;1;800;GCash;Paid;;Subscribed to Plan C\r\n2025-07-18;Daniel Padilla;Walk-in;Plan D - Enterprise Plan;1;1500;Cash;Paid;;Subscribed to Plan D\r\n2025-07-18;Kathryn Bernardo;Delivery;Plan E - Custom Plan;1;2000;GCash;Paid;;Subscribed to Plan E\r\n2025-07-18;Piolo Pascual;Walk-in;Refill (Round 5gal);3;75;Cash;Paid;z2,S010;Walk-in refill\r\n2025-07-19;NoRecord;Delivery;Refill (Slim 5gal);3;75;Cash;Paid;z2,S001,S002;First delivery this week\r\n2025-07-18;Maria Santos;Walk-in;Refill (Round 5gal);2;50;GCash;Paid;z1,S003;Bought bottled water\r\n2025-07-17;Pedro Reyes;Delivery;Dispenser;1;25;Cash;Unpaid;S004;Pending payment\r\n\r\n*/","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","Button","Form","Alert","Typeahead","FaEdit","FaTrash","FaPlus","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Sales","sales","setSales","customers","setCustomers","containers","setContainers","showModal","setShowModal","isEditing","setIsEditing","editMode","setEditMode","selectedSalesIds","setSelectedSalesIds","checkAll","setCheckAll","showDeleteSelectedModal","setShowDeleteSelectedModal","deleting","setDeleting","deleteProgress","setDeleteProgress","deleteSuccess","setDeleteSuccess","showSuccessModal","setShowSuccessModal","successMessage","setSuccessMessage","currentSale","setCurrentSale","date","Date","toISOString","split","customerId","containerId","type","item","quantity","pricePerUnit","totalAmount","paymentMethod","status","remarks","saleToEditId","setSaleToEditId","showDeleteModal","setShowDeleteModal","saleToDelete","setSaleToDelete","showMultiAddModal","setShowMultiAddModal","multiSalesInput","setMultiSalesInput","importProgress","setImportProgress","showImportResultModal","setShowImportResultModal","importResult","setImportResult","successCount","failedLine","errorMessage","currentSaleId","setCurrentSaleId","showAddCustomerModal","setShowAddCustomerModal","currentCustomer","setCurrentCustomer","name","nickname","phone","address","landmark","birthday","itemColors","fetchSales","fetchCustomers","res","get","data","err","console","error","fetchContainers","handleShowAddModal","handleShowEditModal","sale","_sale$customerId","_sale$containerIds","_id","substring","customerName","customerContainerQty","containerIds","map","c","handleSaveSale","calculatedPricePerUnit","saleToSave","put","post","handleDeleteClick","handleDeleteSale","delete","handleMultiSalesImport","alert","importing","lines","trim","log","i","length","line","containersField","f","containersArray","forEach","toLowerCase","startsWith","parseInt","containerObj","find","cont","id","push","qty","total","parseFloat","customer","Math","round","prev","handleAddCustomer","newCustomer","populatedSaleRes","populatedSale","prevSales","s","style","padding","children","variant","onClick","className","disabled","width","role","Check","checked","onChange","e","allIds","target","sort","a","b","_a$customerName","_b$customerName","nameA","nameB","dateA","dateB","_s$pricePerUnit","isChecked","includes","newSelected","filter","toLocaleDateString","month","day","year","_s$customerId","href","textDecoration","display","backgroundColor","color","borderRadius","fontSize","toFixed","index","cid","container","some","size","show","onHide","Header","closeButton","Title","Body","Group","Label","Control","value","labelKey","options","placeholder","allowNew","newSelectionPrefix","selected","found","sel","label","bg","isSelected","undefined","borderColor","Number","Select","min","flex","option","multiple","_currentSale$containe","as","rows","Footer","setTimeout","frequency","lastTransactionDate"],"sources":["D:/GameProjects/JacksWRS App/frontend/jackswrsapp/src/pages/Sales.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport { FaEdit, FaTrash, FaPlus } from 'react-icons/fa';\r\n\r\nfunction Sales() {\r\n    const [sales, setSales] = useState([]);\r\n    const [customers, setCustomers] = useState([]);\r\n    const [containers, setContainers] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);  \r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [selectedSalesIds, setSelectedSalesIds] = useState([]);\r\n    const [checkAll, setCheckAll] = useState(false);\r\n    const [showDeleteSelectedModal, setShowDeleteSelectedModal] = useState(false);\r\n    const [deleting, setDeleting] = useState(false);\r\n    const [deleteProgress, setDeleteProgress] = useState(0);\r\n    const [deleteSuccess, setDeleteSuccess] = useState(false);\r\n    const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    const [currentSale, setCurrentSale] = useState({\r\n      date: new Date().toISOString().split('T')[0],\r\n      customerId: '',\r\n      containerId: '',\r\n      type: 'Delivery',\r\n      item: '',\r\n      quantity: 1,\r\n      pricePerUnit: 0,\r\n      totalAmount: 0,\r\n      paymentMethod: 'Cash',\r\n      status: 'Paid',\r\n      remarks: ''\r\n    });\r\n\r\n    const [saleToEditId, setSaleToEditId] = useState(null);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const [saleToDelete, setSaleToDelete] = useState(null);\r\n    const [showMultiAddModal, setShowMultiAddModal] = useState(false);\r\n    const [multiSalesInput, setMultiSalesInput] = useState('');\r\n\r\n    const [importProgress, setImportProgress] = useState(0);\r\n    const [showImportResultModal, setShowImportResultModal] = useState(false);\r\n    const [importResult, setImportResult] = useState({ successCount: 0, failedLine: null, errorMessage: '' });\r\n\r\n    const [currentSaleId, setCurrentSaleId] = useState(null);\r\n    const [showAddCustomerModal, setShowAddCustomerModal] = useState(false);\r\n    const [currentCustomer, setCurrentCustomer] = useState({\r\n      name: '',\r\n      nickname: '',\r\n      phone: '',\r\n      address: '',\r\n      landmark: '',\r\n      birthday: '',\r\n      remarks: ''\r\n    });\r\n\r\n    const itemColors = {\r\n      \"Refill (Slim 5gal)\": \"#00499cff\",   \r\n      \"Refill (Round 5gal)\": \"#00b3ffff\",  \r\n      \"New (Slim 5gal)\": \"#4aec70ff\",      \r\n      \"New (Round 5gal)\": \"#28a745\",   \r\n      \"Dispenser\": \"#15e8d3ff\",          \r\n      \"Bottled Water (500mL)\": \"#905df7ff\",\r\n      \"Bottled Water (1000mL)\": \"#4f26a0ff\",            \r\n      // add other items as needed\r\n    };\r\n\r\n\r\n  // ===============================\r\n  // LOAD SALES & CUSTOMERS\r\n  // ===============================\r\n  useEffect(() => {\r\n    fetchSales();\r\n    fetchCustomers();\r\n  }, []);\r\n\r\n  const fetchSales = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:3001/api/sales');\r\n      setSales(res.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const fetchCustomers = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:3001/api/customers');\r\n      setCustomers(res.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const fetchContainers = async () => {\r\n  try {\r\n    const res = await axios.get('http://localhost:3001/api/inventory');\r\n    setContainers(res.data);\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nuseEffect(() => {\r\n  fetchSales();\r\n  fetchCustomers();\r\n  fetchContainers(); // load containers\r\n}, []);\r\n\r\n\r\n  // ===============================\r\n  // HANDLERS\r\n  // ===============================\r\n  const handleShowAddModal = () => {\r\n    setIsEditing(false);\r\n    setCurrentSale({\r\n      name: '',\r\n      date: new Date().toISOString().split('T')[0],\r\n      customerId: '',\r\n      containerId: '',\r\n      type: 'Delivery',\r\n      item: 'Refill (Slim 5gal)',\r\n      quantity: 1,\r\n      pricePerUnit: 0,\r\n      totalAmount: 0,\r\n      paymentMethod: 'Cash',\r\n      status: 'Paid',\r\n      remarks: ''\r\n    });\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleShowEditModal = (sale) => {\r\n//  if (containers.length === 0) {\r\n//     alert(\"Containers not loaded yet. Please wait.\");\r\n//     return;\r\n//   }else{\r\n//     alert(\"Containers are loaded.\");\r\n//     console.log(\"Sale.containerIds:\", sale.containerIds);\r\n//   }\r\n\r\n    setIsEditing(true);\r\n    setSaleToEditId(sale._id);\r\n    setCurrentSale({\r\n      date: sale.date ? sale.date.substring(0,10) : new Date().toISOString().split('T')[0],\r\n      customerId: sale.customerId?._id || '',\r\n      customerName: sale.customerName || '',\r\n      type: sale.type,\r\n      item: sale.item || '',\r\n      quantity: sale.quantity,\r\n      pricePerUnit: sale.pricePerUnit || 0,\r\n      totalAmount: sale.totalAmount,\r\n      paymentMethod: sale.paymentMethod,\r\n      status: sale.status,\r\n      customerContainerQty: sale.customerContainerQty || 0,\r\n      containerIds: sale.containerIds?.map(c => c._id || c) || [],\r\n      remarks: sale.remarks || ''\r\n    });\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleSaveSale = async () => {\r\n    try {\r\n      const calculatedPricePerUnit = currentSale.totalAmount && currentSale.quantity\r\n        ? currentSale.totalAmount / currentSale.quantity\r\n        : 0;\r\n\r\n    const saleToSave = { \r\n      ...currentSale, \r\n      pricePerUnit: calculatedPricePerUnit,\r\n      customerId: currentSale.customerId || null,\r\n      customerName: currentSale.customerName || '',\r\n      customerContainerQty: currentSale.customerContainerQty || 0,\r\n    };\r\n\r\n\r\n      if (isEditing) {\r\n        await axios.put(`http://localhost:3001/api/sales/${saleToEditId}`, saleToSave);\r\n      } else {\r\n        await axios.post('http://localhost:3001/api/sales', saleToSave);\r\n      }\r\n\r\n      setShowModal(false);\r\n      fetchSales();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = (sale) => {\r\n    setSaleToDelete(sale);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  const handleDeleteSale = async () => {\r\n    try {\r\n      await axios.delete(`http://localhost:3001/api/sales/${saleToDelete._id}`);\r\n      setShowDeleteModal(false);\r\n      setSaleToDelete(null);\r\n      fetchSales();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\nconst handleMultiSalesImport = async () => {    \r\n  if (!multiSalesInput) {\r\n    alert('Please enter sales records first.');\r\n    return;\r\n  }\r\n\r\n  let importing = true; // 🔑 local synchronous flag to avoid React async delays\r\n\r\n  const lines = multiSalesInput.trim().split('\\n');\r\n  let successCount = 0;\r\n\r\n  try {\r\n      console.log(\"Starting import...\");\r\n    for (let i = 0; i < lines.length; i++) {\r\n      if (!importing) {\r\n        console.log('Import stopped by user.');\r\n        break;\r\n      }\r\n\r\n      const line = lines[i];\r\n      const [date, customerName, type, item, quantity, totalAmount, paymentMethod, status, containersField, remarks] = line.split(';').map(f => f.trim());\r\n\r\n      // Process containers field\r\n      let customerContainerQty = 0;\r\n      let containerIds = [];\r\n      if (containersField) {\r\n        const containersArray = containersField.split(',').map(c => c.trim());\r\n        containersArray.forEach(c => {\r\n          if (c.toLowerCase().startsWith('z')) {\r\n            customerContainerQty = parseInt(c.substring(1)) || 0;\r\n          } else {\r\n            const containerObj = containers.find(cont => cont.id === c || cont.name === c || cont._id === c);\r\n            if (containerObj) {\r\n              containerIds.push(containerObj._id);\r\n            } else {\r\n              containerIds.push(c);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      // Calculate\r\n      const qty = parseInt(quantity);\r\n      const total = parseFloat(totalAmount);\r\n      const pricePerUnit = qty !== 0 ? total / qty : 0;\r\n\r\n      const customer = customers.find(c => c.name.toLowerCase() === customerName.toLowerCase());\r\n\r\n      const sale = {\r\n        date: date || new Date().toISOString().split('T')[0],\r\n        customerId: customer ? customer._id : null,\r\n        customerName: customer ? customer.name : customerName,\r\n        type: type || 'Walk-in',\r\n        item: item || '',\r\n        quantity: qty || 1,\r\n        totalAmount: total || 0,\r\n        pricePerUnit: pricePerUnit || 0,\r\n        paymentMethod: paymentMethod || 'Cash',\r\n        status: status || 'Paid',\r\n        customerContainerQty,\r\n        containerIds,\r\n        remarks: remarks || '',\r\n      };\r\n\r\n      await axios.post('http://localhost:3001/api/sales', sale);\r\n      \r\n      successCount++;\r\n\r\n      // Update progress bar\r\n      setImportProgress(Math.round(((i + 1) / lines.length) * 100));\r\n    }\r\n\r\n    // Show success modal if all completed\r\n    if (successCount === lines.length) {\r\n      setImportResult(prev => ({ \r\n        ...prev, \r\n        successCount \r\n    }));\r\n\r\n      setShowMultiAddModal(false);\r\n      setShowImportResultModal(true);\r\n    }\r\n\r\n    fetchSales();\r\n\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert('Error importing sales. Check console for details.');\r\n  }\r\n};\r\n\r\nconst handleAddCustomer = async () => {\r\n  try {\r\n    // 1. Create the new customer\r\n    const res = await axios.post('http://localhost:3001/api/customers', currentCustomer);\r\n    const newCustomer = res.data;\r\n\r\n    // 2. Update the sale with new customerId and customerName\r\n    await axios.put(`http://localhost:3001/api/sales/${currentSaleId}`, {\r\n      customerId: newCustomer._id,\r\n      customerName: newCustomer.name\r\n    });\r\n\r\n    // 3. Fetch the fully populated updated sale\r\n    const populatedSaleRes = await axios.get(`http://localhost:3001/api/sales/${currentSaleId}`);\r\n    const populatedSale = populatedSaleRes.data;\r\n\r\n    // 4. Update sales state locally to reflect immediately\r\n    setSales(prevSales =>\r\n      prevSales.map(s =>\r\n        s._id === populatedSale._id ? populatedSale : s\r\n      )\r\n    );\r\n // 🔁 Re-fetch inventory to update name link\r\n    fetchSales();\r\n\r\n    // 5. Close modal and reset\r\n    \r\n    setShowAddCustomerModal(false);\r\n    setCurrentCustomer({});\r\n    setCurrentSaleId(null);\r\n\r\n    setSuccessMessage('Customer added and sale updated!');\r\n    setShowSuccessModal(true);\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert('Error adding customer.');\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // ===============================\r\n  //            RENDER\r\n  // ===============================\r\nreturn (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>Sales</h2>\r\n\r\n      <Button variant=\"primary\" onClick={handleShowAddModal}>Add Sale</Button>\r\n      <Button\r\n          variant=\"secondary\"\r\n          onClick={() => {\r\n            setImportProgress(0);  // reset progress\r\n            setShowMultiAddModal(true);\r\n          }}\r\n        >\r\n          Add Multiple Sales\r\n        </Button>\r\n        <Button\r\n          variant={editMode ? \"danger\" : \"warning\"}\r\n          className=\"ms-2\"\r\n          onClick={() => {\r\n            setEditMode(!editMode);\r\n            setSelectedSalesIds([]);\r\n            setCheckAll(false);\r\n          }}\r\n        >\r\n          {editMode ? \"Exit Edit Mode\" : \"Edit Mode\"}\r\n        </Button>\r\n\r\n        {editMode && (\r\n          <Button\r\n            variant=\"secondary\"\r\n            className=\"ms-2\"\r\n            disabled={selectedSalesIds.length === 0 || deleting}\r\n            onClick={() => setShowDeleteSelectedModal(true)}\r\n          >\r\n            {deleting ? 'Deleting...' : `Delete Selected (${selectedSalesIds.length})`}\r\n          </Button>\r\n        )}\r\n\r\n        {deleting && (\r\n          <div className=\"mt-3\" style={{ width: '300px' }}>\r\n            <div className=\"progress\">\r\n              <div\r\n                className=\"progress-bar bg-danger\"\r\n                role=\"progressbar\"\r\n                style={{ width: `${deleteProgress}%` }}\r\n                aria-valuenow={deleteProgress}\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n              >\r\n                {deleteProgress}%\r\n              </div>\r\n            </div>\r\n            <div className=\"text-center mt-2\">Deleting... Please wait.</div>\r\n          </div>\r\n        )}\r\n\r\n        {deleteSuccess && (\r\n          <Alert variant=\"success\" className=\"mt-3\">\r\n            Selected items deleted successfully!\r\n          </Alert>\r\n        )}\r\n\r\n      <table className=\"table table-hover mt-3\">\r\n        <thead>\r\n          <tr>\r\n            {editMode && (\r\n              <th>\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  checked={checkAll}\r\n                  onChange={(e) => {\r\n                    const allIds = sales.map(s => s._id);\r\n                    setCheckAll(e.target.checked);\r\n                    if (e.target.checked) {\r\n                      setSelectedSalesIds(allIds);\r\n                    } else {\r\n                      setSelectedSalesIds([]);\r\n                    }\r\n                  }}\r\n                />\r\n              </th>\r\n            )}\r\n            <th>Date</th>\r\n            <th>Customer Name</th>\r\n            <th>Type</th>\r\n            <th>Item</th>\r\n            <th>Quantity</th>\r\n            <th>Price Per Unit</th>\r\n            <th>Total</th>\r\n            <th>Payment</th>\r\n            <th>Status</th>\r\n            <th>Containers</th>\r\n            <th>Remarks</th>\r\n            {editMode && (\r\n                <>            \r\n                <th>Actions</th>\r\n                </>\r\n            )}\r\n            \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            {sales\r\n            //.sort((a, b) => new Date(a.date) - new Date(b.date))\r\n              .sort((a, b) => {\r\n    // 1️⃣ Compare names (case-insensitive)\r\n    const nameA = a.customerName?.toLowerCase() || '';\r\n    const nameB = b.customerName?.toLowerCase() || '';\r\n    if (nameA < nameB) return -1;\r\n    if (nameA > nameB) return 1;\r\n\r\n    // 2️⃣ If names are the same, compare dates\r\n    const dateA = new Date(a.date);\r\n    const dateB = new Date(b.date);\r\n    return dateA - dateB;\r\n  })\r\n            .map(s => {\r\n              const isChecked = selectedSalesIds.includes(s._id);\r\n              return (\r\n              <tr key={s._id}>\r\n                {editMode && (\r\n                <td>\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    checked={isChecked}\r\n                    onChange={(e) => {\r\n                      if (e.target.checked) {\r\n                        const newSelected = [...selectedSalesIds, s._id];\r\n                        setSelectedSalesIds(newSelected);\r\n                        if (newSelected.length === sales.length) {\r\n                          setCheckAll(true);\r\n                        }\r\n                      } else {\r\n                        const newSelected = selectedSalesIds.filter(id => id !== s._id);\r\n                        setSelectedSalesIds(newSelected);\r\n                        setCheckAll(false);\r\n                      }\r\n                    }}\r\n                  />\r\n                </td>)}\r\n                <td>\r\n                  {new Date(s.date).toLocaleDateString('en-US', {\r\n                    month: 'long',\r\n                    day: '2-digit',\r\n                    year: 'numeric'\r\n                  })}\r\n                </td>\r\n                <td>\r\n                    {(() => {\r\n                      const customer = customers.find(c => c._id === (s.customerId?._id || s.customerId));\r\n                      if (customer) {\r\n                        return (\r\n                          <a href={`/customers/${customer._id}/profile`} style={{ textDecoration: 'underline' }}>\r\n                            {customer.name}\r\n                          </a>\r\n                        );\r\n                      } else {\r\n                        return s.customerName || '-';\r\n                      }\r\n                    })()}\r\n                  </td>\r\n                <td>{s.type}</td>\r\n                <td><span\r\n                      style={{\r\n                        display: \"inline-block\",\r\n                        backgroundColor: itemColors[s.item] || \"#ccc\", // default gray if not found\r\n                        color: \"white\",\r\n                        borderRadius: \"15px\",\r\n                        padding: \"2px 8px\",\r\n                        fontSize: \"1rem\",\r\n                      }}\r\n                    >\r\n                      {s.item}\r\n                    </span></td>                    \r\n                <td>{s.quantity}</td>\r\n                <td className=\"text-muted\">₱{s.pricePerUnit?.toFixed(2) || '0.00'}</td>\r\n                <td>₱{s.totalAmount}</td>\r\n                <td>{s.paymentMethod}</td>\r\n                <td>{s.status}</td>\r\n                <td>\r\n                 {/*\r\n                   Display owned containers if qty > 0\r\n                 */}\r\n                 {s.customerContainerQty > 0 && (\r\n                   <span>\r\n                     z{s.customerContainerQty}\r\n                     {s.containerIds && s.containerIds.length > 0 ? ', ' : ''}\r\n                   </span>\r\n                 )}\r\n               \r\n                 {/*\r\n                   Display borrowed containers as clickable links\r\n                 */}\r\n                 {s.containerIds && s.containerIds.length > 0\r\n                   ? s.containerIds.map((c, index) => {\r\n                       const cid = c._id || c; // handle object or ID\r\n                       const container = containers.find(cont => cont._id === cid);\r\n                       return container ? (\r\n                         <span key={cid}>\r\n                           <a href={`/inventory/${container._id}`} style={{ textDecoration: 'underline' }}>\r\n                             {container.name}\r\n                           </a>\r\n                           {index < s.containerIds.length - 1 ? ', ' : ''}\r\n                         </span>\r\n                       ) : (\r\n                         <span key={cid}>\r\n                           {cid}\r\n                           {index < s.containerIds.length - 1 ? ', ' : ''}\r\n                         </span>\r\n                       );\r\n                     })\r\n                   : (!s.customerContainerQty || s.customerContainerQty === 0) && '-'}\r\n                 </td>\r\n                 <td className=\"fst-italic\">{s.remarks}</td>\r\n                 {editMode && (\r\n                  <>\r\n                 <td>\r\n                  {!customers.some(c => c.name.toLowerCase() === s.customerName.toLowerCase()) && (\r\n                    <Button\r\n                      variant=\"success\"\r\n                      size=\"sm\"\r\n                      onClick={() => {\r\n                        setCurrentCustomer({ name: s.customerName });\r\n                        setCurrentSaleId(s._id);\r\n                        setShowAddCustomerModal(true);\r\n                      }}\r\n                    >\r\n                      <FaPlus /> {/* or your add icon */}\r\n                    </Button>\r\n                )}\r\n                    <Button variant=\"link\" size=\"sm\" onClick={() => handleShowEditModal(s)}>\r\n                      <FaEdit color=\"orange\" />\r\n                    </Button>\r\n                    <Button variant=\"link\" size=\"sm\" onClick={() => handleDeleteClick(s)}>\r\n                      <FaTrash color=\"red\" />\r\n                    </Button>\r\n                  </td>\r\n                  </>\r\n                 )}  \r\n            </tr>\r\n          );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n\r\n {/* ////////////////////////////// */}\r\n {/* /////       MODALS       ///// */}\r\n {/* ////////////////////////////// */}\r\n\r\n\r\n    {/* Add/Edit Modal */}\r\n    <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>{isEditing ? 'Edit Sale' : 'Add Sale'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label>Date</Form.Label>\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      value={currentSale.date}\r\n                      onChange={(e) => setCurrentSale({ ...currentSale, date: e.target.value })}\r\n                    />\r\n                </Form.Group>\r\n                \r\n                <Form.Group>\r\n                    <Form.Label>Customer Name</Form.Label>\r\n                        <Typeahead\r\n                            id=\"customer-typeahead\"\r\n                            labelKey=\"name\" // which property to display as label\r\n                            options={customers} // array of customers from database\r\n                            placeholder=\"Type customer name...\"\r\n                            allowNew // allows typing new names not in the list\r\n                            newSelectionPrefix=\"New: \"\r\n                  \r\n                            selected={\r\n                                (() => {\r\n                                  const found = customers.find(c => c._id === currentSale.customerId);\r\n                                  if (found) {\r\n                                    return [found]; // show existing customer as selected\r\n                                  } else if (currentSale.customerName) {\r\n                                    return [{ name: currentSale.customerName }]; // show typed name as selected\r\n                                  } else {\r\n                                    return []; // no selection\r\n                                  }\r\n                                })()\r\n                            }\r\n            \r\n                            onChange={(selected) => {\r\n                                if (selected.length > 0) {\r\n                                    const sel = selected[0];\r\n                                    if (sel._id) {\r\n                                        setCurrentSale({\r\n                                          ...currentSale,\r\n                                          customerId: sel._id,\r\n                                          customerName: sel.name\r\n                                      });\r\n                                    } else if (sel.name) {\r\n                                        // New typed name\r\n                                        setCurrentSale({\r\n                                          ...currentSale,\r\n                                          customerId: null,\r\n                                          customerName: sel.name\r\n                                        });\r\n                                    } else if (typeof sel === 'string') {\r\n                                        // Typed raw string (edge case)\r\n                                        setCurrentSale({\r\n                                          ...currentSale,\r\n                                          customerId: null,\r\n                                          customerName: sel\r\n                                        });\r\n                                    }\r\n                                } else {\r\n                                    // If cleared selection\r\n                                    setCurrentSale({\r\n                                      ...currentSale,\r\n                                      customerId: null,\r\n                                      customerName: ''\r\n                                    });\r\n                                }\r\n                            }}\r\n                        />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Type</Form.Label><br/>\r\n                    <Button\r\n                      value = {currentSale.type}\r\n                      variant={currentSale.type === 'Walk-in' ? 'success' : 'outline-success'}\r\n                      onClick={() => setCurrentSale({ ...currentSale, type: 'Walk-in' })}\r\n                      className=\"me-2\"\r\n                    >\r\n                        Walk-in\r\n                    </Button>\r\n                    <Button\r\n                      variant={currentSale.type === 'Delivery' ? 'primary' : 'outline-primary'}\r\n                      onClick={() => setCurrentSale({ ...currentSale, type: 'Delivery' })}\r\n                    >\r\n                        Delivery\r\n                    </Button>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Item</Form.Label>\r\n                    <div className=\"d-flex flex-wrap\">\r\n                      {[\r\n                        { label: \"Refill (Slim 5gal)\", bg: \"primary\" },\r\n                        { label: \"Refill (Round 5gal)\", bg: \"info\" },\r\n                        { label: \"New (Slim 5gal)\", bg: \"success\" },\r\n                        { label: \"New (Round 5gal)\", bg: \"success\" },\r\n                        { label: \"Plan A - Standard Plan\", bg: \"danger\" },\r\n                        { label: \"Plan B - Family Plan\", bg: \"danger\" },\r\n                        { label: \"Plan C - Business Plan\", bg: \"danger\" },\r\n                        { label: \"Plan D - Enterprise Plan\", bg: \"danger\" },\r\n                        { label: \"Plan E - Custom Plan\", bg: \"danger\" },\r\n                        { label: \"Big Cap\", bg: \"warning\" },\r\n                        { label: \"Small Cap\", bg: \"warning\" },\r\n                        { label: \"Faucet\", bg: \"warning\" },\r\n                        { label: \"Others\", bg: \"warning\" },\r\n                        { label: \"Bottled Water (500mL)\", bg: \"purple\" },\r\n                        { label: \"Bottled Water (1000mL)\", bg: \"purple\" },\r\n                        { label: \"Dispenser\", bg: \"info\" },\r\n                      ].map(item => {\r\n                        const isSelected = currentSale.item === item.label;\r\n                        return (\r\n                          <Button\r\n                            key={item.label}\r\n                            size=\"sm\"\r\n                            variant={isSelected ? item.bg : `outline-${item.bg}`}\r\n                            className=\"me-2 mb-2\"\r\n                            onClick={() => setCurrentSale({ ...currentSale, item: item.label })}\r\n                            style={{\r\n                              backgroundColor: item.bg === \"purple\" && isSelected ? \"#d6b3ff\"\r\n                                               : item.bg === \"purple\" ? \"transparent\"\r\n                                               : undefined,\r\n                              borderColor: item.bg === \"purple\" ? \"#d6b3ff\" : undefined,\r\n                              color: item.bg === \"purple\" && isSelected ? \"#5c2d91\"\r\n                                    : item.bg === \"purple\" ? \"#5c2d91\"\r\n                                    : undefined,\r\n                            }}\r\n                          >\r\n                            {item.label}\r\n                          </Button>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                </Form.Group>\r\n                \r\n                <Form.Group>\r\n                    <Form.Label>Quantity</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      value={currentSale.quantity}\r\n                      onChange={(e) => setCurrentSale({ ...currentSale, quantity: Number(e.target.value) })}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Total Amount</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      value={currentSale.totalAmount}\r\n                      onChange={(e) => setCurrentSale({ ...currentSale, totalAmount: Number(e.target.value) })}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Payment Method</Form.Label>\r\n                    <Form.Select\r\n                      value={currentSale.paymentMethod}\r\n                      onChange={(e) => setCurrentSale({ ...currentSale, paymentMethod: e.target.value })}\r\n                    >\r\n                      <option>Cash</option>\r\n                      <option>GCash</option>\r\n                      <option>Free</option>\r\n                    </Form.Select>\r\n                </Form.Group>\r\n                \r\n                <Form.Group>\r\n                    <Form.Label>Status</Form.Label>\r\n                    <Form.Select\r\n                      value={currentSale.status}\r\n                      onChange={(e) => setCurrentSale({ ...currentSale, status: e.target.value })}\r\n                    >\r\n                      <option>Paid</option>\r\n                      <option>Unpaid</option>\r\n                      <option>Free</option>\r\n                    </Form.Select>\r\n                </Form.Group>\r\n                \r\n            <Form.Group>\r\n            <Form.Label>Containers</Form.Label>\r\n            <div className=\"d-flex align-items-center\">\r\n\r\n              {/* Owned qty input */}\r\n              <div className=\"me-2 d-flex align-items-center\">\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  placeholder=\"Owned\"\r\n                  value={currentSale.customerContainerQty}\r\n                  onChange={(e) =>\r\n                    setCurrentSale({\r\n                      ...currentSale,\r\n                      customerContainerQty: Number(e.target.value)\r\n                    })\r\n                  }\r\n                  style={{ width: \"100px\" }}\r\n                />\r\n              </div>\r\n              \r\n              {/* Select containers Typeahead */}\r\n              <div style={{ flex: 1 }}>\r\n                <Typeahead\r\n                  id=\"container-typeahead\"\r\n                  labelKey={(option) => `${option.id} - ${option.name}`}\r\n                  options={containers}\r\n                  placeholder=\"Select containers...\"\r\n                  multiple\r\n                  selected={containers.filter(c =>\r\n                    currentSale.containerIds?.includes(c._id)\r\n                  )}\r\n                  onChange={(selected) => {\r\n                    setCurrentSale({\r\n                      ...currentSale,\r\n                      containerIds: selected.map(s => s._id)\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n              \r\n            </div>\r\n          </Form.Group>\r\n              \r\n          <Form.Group>\r\n            <Form.Label>Remarks</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={2}\r\n              value={currentSale.remarks}\r\n              onChange={(e) => setCurrentSale({ ...currentSale, remarks: e.target.value })}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={() => setShowModal(false)}>Cancel</Button>\r\n        <Button variant=\"primary\" \r\n            onClick = { () => {\r\n                handleSaveSale();\r\n                console.log(\"currentSale.containerIds\", currentSale.containerIds);\r\n                console.log(\"containers\", containers);\r\n            }}\r\n            >Save</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n\r\n      {/* Delete Confirmation Modal */}\r\n    <Modal show={showDeleteModal} onHide={() => setShowDeleteModal(false)}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Delete Sale</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        Are you sure you want to delete this sale?\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={() => setShowDeleteModal(false)}>Cancel</Button>\r\n        <Button variant=\"danger\" onClick={handleDeleteSale}>Delete</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n\r\n    {/* Add Multi Sales Modal */}\r\n    <Modal show={showMultiAddModal} onHide={() => setShowMultiAddModal(false)}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Add Multiple Sales</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label>Enter multiple sales (one per line, semicolon-separated fields: date;customer name;type;quantity;total amount;payment method;status;containers;remarks)</Form.Label>\r\n                    {importProgress > 0 && (\r\n                      <div className=\"my-2\">\r\n                        <div className=\"progress\">\r\n                          <div\r\n                            className=\"progress-bar progress-bar-striped progress-bar-animated\"\r\n                            role=\"progressbar\"\r\n                            style={{ width: `${importProgress}%` }}\r\n                            aria-valuenow={importProgress}\r\n                            aria-valuemin=\"0\"\r\n                            aria-valuemax=\"100\"\r\n                          >\r\n                            {importProgress}%\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}                        \r\n                    <Form.Control as=\"textarea\" rows={10} value={multiSalesInput} onChange={(e) => setMultiSalesInput(e.target.value)} />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" className=\"mt-2\" onClick={handleMultiSalesImport}>Import Sales</Button>\r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={() => setShowMultiAddModal(false)}>Close</Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n\r\n    {/* Multi Add Result Modal */}\r\n    <Modal show={showImportResultModal} onHide={() => setShowImportResultModal(false)}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Import Result</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {importResult.failedLine\r\n          ? <>\r\n              <p>✅ Successfully added: {importResult.successCount}</p>\r\n              <p>❌ Failed at line: {importResult.failedLine}</p>\r\n              <p>Error: {importResult.errorMessage}</p>\r\n            </>\r\n          : <p>✅ All records successfully imported! Total added: {importResult.successCount}</p>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button \r\n            variant=\"primary\" \r\n            onClick={() => {\r\n                setShowImportResultModal(false);\r\n                setShowMultiAddModal(false);\r\n                setImportProgress(0);\r\n            }}\r\n        >\r\n          Close\r\n        </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n\r\n    {/* Add Delete Selected Modal */}\r\n    <Modal show={showDeleteSelectedModal} onHide={() => setShowDeleteSelectedModal(false)}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Confirm Delete Selected</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        Are you sure you want to delete {selectedSalesIds.length} selected sale{selectedSalesIds.length > 1 ? 's' : ''}?\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={() => setShowDeleteSelectedModal(false)}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          variant=\"danger\"\r\n          onClick={async () => {\r\n            try {\r\n              setShowDeleteSelectedModal(false);\r\n              setDeleting(true);\r\n              setDeleteProgress(0);\r\n            \r\n              for (let i = 0; i < selectedSalesIds.length; i++) {\r\n                const id = selectedSalesIds[i];\r\n                await axios.delete(`http://localhost:3001/api/sales/${id}`);\r\n                setDeleteProgress(Math.round(((i + 1) / selectedSalesIds.length) * 100));\r\n              }\r\n          \r\n              setDeleteSuccess(true);\r\n              setTimeout(() => setDeleteSuccess(false), 3000);\r\n          \r\n              fetchSales();\r\n              setSelectedSalesIds([]);\r\n              setCheckAll(false);\r\n            } catch (err) {\r\n              console.error(err);\r\n              alert('Error deleting selected sales.');\r\n            } finally {\r\n              setDeleting(false);\r\n              setDeleteProgress(0);\r\n            }\r\n          }}\r\n        >\r\n          Confirm Delete\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n\r\n    {/* Add New Customer Modal */}\r\n    <Modal show={showAddCustomerModal} onHide={() => setShowAddCustomerModal(false)}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Add Customer</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n           <Form>\r\n                <Form.Group>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      value={currentCustomer.name || ''}\r\n                      onChange={(e) =>\r\n                        setCurrentCustomer({ ...currentCustomer, name: e.target.value })\r\n                      }\r\n                    />\r\n                </Form.Group>\r\n                    \r\n                <Form.Group>\r\n                    <Form.Label>Nickname</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      value={currentCustomer.nickname || ''}\r\n                      onChange={(e) =>\r\n                        setCurrentCustomer({ ...currentCustomer, nickname: e.target.value })\r\n                      }\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Phone</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      value={currentCustomer.phone || ''}\r\n                      onChange={(e) =>\r\n                        setCurrentCustomer({ ...currentCustomer, phone: e.target.value })\r\n                      }\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                  <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      value={currentCustomer.address || ''}\r\n                      onChange={(e) =>\r\n                        setCurrentCustomer({ ...currentCustomer, address: e.target.value })\r\n                      }\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Landmark</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      value={currentCustomer.landmark || ''}\r\n                      onChange={(e) =>\r\n                        setCurrentCustomer({ ...currentCustomer, landmark: e.target.value })\r\n                      }\r\n                    />\r\n                </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Frequency</Form.Label>\r\n        <Form.Control\r\n          type=\"number\"\r\n          value={currentCustomer.frequency || ''}\r\n          onChange={(e) =>\r\n            setCurrentCustomer({ ...currentCustomer, frequency: e.target.value })\r\n          }\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Birthday</Form.Label>\r\n        <Form.Control\r\n          type=\"date\"\r\n          value={currentCustomer.birthday || ''}\r\n          onChange={(e) =>\r\n            setCurrentCustomer({ ...currentCustomer, birthday: e.target.value })\r\n          }\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Last Transaction Date</Form.Label>\r\n        <Form.Control\r\n          type=\"date\"\r\n          value={currentCustomer.lastTransactionDate || ''}\r\n          onChange={(e) =>\r\n            setCurrentCustomer({\r\n              ...currentCustomer,\r\n              lastTransactionDate: e.target.value,\r\n            })\r\n          }\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Remarks</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={2}\r\n          value={currentCustomer.remarks || ''}\r\n          onChange={(e) =>\r\n            setCurrentCustomer({ ...currentCustomer, remarks: e.target.value })\r\n          }\r\n        />\r\n      </Form.Group>\r\n    </Form>\r\n  </Modal.Body>\r\n  <Modal.Footer>\r\n    <Button variant=\"secondary\" onClick={() => setShowAddCustomerModal(false)}>\r\n      Cancel\r\n    </Button>\r\n    <Button variant=\"primary\" onClick={handleAddCustomer}>\r\n      Save\r\n    </Button>\r\n  </Modal.Footer>\r\n    </Modal>\r\n\r\n<Modal show={showSuccessModal} onHide={() => setShowSuccessModal(false)}>\r\n  <Modal.Header closeButton>\r\n    <Modal.Title>Success</Modal.Title>\r\n  </Modal.Header>\r\n  <Modal.Body>\r\n    <p>{successMessage}</p>\r\n  </Modal.Body>\r\n  <Modal.Footer>\r\n    <Button variant=\"primary\" onClick={() => {\r\n  setShowSuccessModal(false);\r\n  fetchSales(); // refresh when modal is closed\r\n}}>\r\n  OK\r\n</Button>\r\n  </Modal.Footer>\r\n</Modal>\r\n\r\n             \r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sales;\r\n\r\n/*\r\n2025-07-18;John Cruz;Delivery;Refill (Slim 5gal);3;75;Cash;Paid;z2,S001;Morning delivery\r\n2025-07-18;Maria Santos;Walk-in;Refill (Round 5gal);2;50;GCash;Paid;z1,S002;Regular customer\r\n2025-07-18;Alex Dela Cruz;Delivery;New (Slim 5gal);1;200;Cash;Paid;S003;First time order\r\n2025-07-18;Jenny Lopez;Walk-in;New (Round 5gal);1;220;Cash;Paid;z1;Bought new round container\r\n2025-07-18;Mark Reyes;Delivery;Refill (Slim 5gal);5;125;GCash;Paid;z3,S004,S005;Monthly refill\r\n2025-07-18;Louie Mendoza;Walk-in;Refill (Round 5gal);4;100;Cash;Paid;z2,S006,S007;Walk-in refill\r\n2025-07-18;Cathy Villanueva;Delivery;Plan A - Standard Plan;1;350;GCash;Paid;;Subscribed to Plan A\r\n2025-07-18;Ryan Tan;Walk-in;Plan B - Family Plan;1;500;Cash;Paid;;Subscribed to Plan B\r\n2025-07-18;Mikaela Lim;Delivery;Big Cap;2;40;Cash;Paid;;Bought extra caps\r\n2025-07-18;Chris Uy;Walk-in;Small Cap;3;30;GCash;Paid;;Bought small caps\r\n2025-07-18;Daryl Ong;Delivery;Faucet;1;50;Cash;Paid;;Bought faucet\r\n2025-07-18;Shiela Gomez;Walk-in;Bottled Water (500mL);10;150;GCash;Paid;;Bought bottled water\r\n2025-07-18;Aaron Perez;Delivery;Bottled Water (1000mL);5;125;Cash;Paid;;Ordered bottled water\r\n2025-07-18;Regine Velasquez;Walk-in;Dispenser;1;1200;GCash;Paid;;Bought dispenser\r\n2025-07-18;Janine Gutierrez;Delivery;Refill (Slim 5gal);2;50;Cash;Paid;z1,S008;Regular delivery\r\n2025-07-18;Enrique Gil;Walk-in;New (Slim 5gal);1;200;Cash;Paid;S009;Bought new slim container\r\n2025-07-18;Liza Soberano;Delivery;Plan C - Business Plan;1;800;GCash;Paid;;Subscribed to Plan C\r\n2025-07-18;Daniel Padilla;Walk-in;Plan D - Enterprise Plan;1;1500;Cash;Paid;;Subscribed to Plan D\r\n2025-07-18;Kathryn Bernardo;Delivery;Plan E - Custom Plan;1;2000;GCash;Paid;;Subscribed to Plan E\r\n2025-07-18;Piolo Pascual;Walk-in;Refill (Round 5gal);3;75;Cash;Paid;z2,S010;Walk-in refill\r\n2025-07-19;NoRecord;Delivery;Refill (Slim 5gal);3;75;Cash;Paid;z2,S001,S002;First delivery this week\r\n2025-07-18;Maria Santos;Walk-in;Refill (Round 5gal);2;50;GCash;Paid;z1,S003;Bought bottled water\r\n2025-07-17;Pedro Reyes;Delivery;Dispenser;1;25;Cash;Unpaid;S004;Pending payment\r\n\r\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}