{"ast":null,"code":"var _jsxFileName = \"D:\\\\GameProjects\\\\JacksWRS App\\\\frontend\\\\jackswrsapp\\\\src\\\\pages\\\\Sales.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport { FaEdit, FaTrash, FaPlus } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Sales() {\n  _s();\n  const [sales, setSales] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [containers, setContainers] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [selectedSalesIds, setSelectedSalesIds] = useState([]);\n  const [checkAll, setCheckAll] = useState(false);\n  const [showDeleteSelectedModal, setShowDeleteSelectedModal] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const [deleteProgress, setDeleteProgress] = useState(0);\n  const [deleteSuccess, setDeleteSuccess] = useState(false);\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [currentSale, setCurrentSale] = useState({\n    date: new Date().toISOString().split('T')[0],\n    customerId: '',\n    containerId: '',\n    type: 'Delivery',\n    item: '',\n    quantity: 1,\n    pricePerUnit: 0,\n    totalAmount: 0,\n    paymentMethod: 'Cash',\n    status: 'Paid',\n    remarks: ''\n  });\n  const [saleToEditId, setSaleToEditId] = useState(null);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [saleToDelete, setSaleToDelete] = useState(null);\n  const [showMultiAddModal, setShowMultiAddModal] = useState(false);\n  const [multiSalesInput, setMultiSalesInput] = useState('');\n  const [importProgress, setImportProgress] = useState(0);\n  const [showImportResultModal, setShowImportResultModal] = useState(false);\n  const [importResult, setImportResult] = useState({\n    successCount: 0,\n    failedLine: null,\n    errorMessage: ''\n  });\n  const [currentSaleId, setCurrentSaleId] = useState(null);\n  const [showAddCustomerModal, setShowAddCustomerModal] = useState(false);\n  const [currentCustomer, setCurrentCustomer] = useState({\n    name: '',\n    nickname: '',\n    phone: '',\n    address: '',\n    landmark: '',\n    birthday: '',\n    remarks: '',\n    containersOutput: containersOutput || []\n  });\n\n  // ===============================\n  // LOAD SALES & CUSTOMERS\n  // ===============================\n  useEffect(() => {\n    fetchSales();\n    fetchCustomers();\n  }, []);\n  const fetchSales = async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/api/sales');\n      setSales(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const fetchCustomers = async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/api/customers');\n      setCustomers(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const fetchContainers = async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/api/inventory');\n      setContainers(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    fetchSales();\n    fetchCustomers();\n    fetchContainers(); // load containers\n  }, []);\n  // ===============================\n  // HANDLERS\n  // ===============================\n  const handleShowAddModal = () => {\n    setIsEditing(false);\n    setCurrentSale({\n      name: '',\n      date: new Date().toISOString().split('T')[0],\n      customerId: '',\n      containerId: '',\n      type: 'Delivery',\n      item: 'Refill (Slim 5gal)',\n      quantity: 1,\n      pricePerUnit: 0,\n      totalAmount: 0,\n      paymentMethod: 'Cash',\n      status: 'Paid',\n      remarks: ''\n    });\n    setShowModal(true);\n  };\n  const handleShowEditModal = sale => {\n    var _sale$customerId;\n    setIsEditing(true);\n    setSaleToEditId(sale._id);\n    setCurrentSale({\n      date: sale.date ? sale.date.substring(0, 10) : new Date().toISOString().split('T')[0],\n      customerId: ((_sale$customerId = sale.customerId) === null || _sale$customerId === void 0 ? void 0 : _sale$customerId._id) || '',\n      customerName: sale.customerName || '',\n      type: sale.type,\n      item: sale.item || '',\n      quantity: sale.quantity,\n      pricePerUnit: sale.pricePerUnit || 0,\n      totalAmount: sale.totalAmount,\n      paymentMethod: sale.paymentMethod,\n      status: sale.status,\n      containerIds: sale.containerIds || [],\n      remarks: sale.remarks || ''\n    });\n    setShowModal(true);\n  };\n  const handleSaveSale = async () => {\n    try {\n      const calculatedPricePerUnit = currentSale.totalAmount && currentSale.quantity ? currentSale.totalAmount / currentSale.quantity : 0;\n      const saleToSave = {\n        ...currentSale,\n        pricePerUnit: calculatedPricePerUnit,\n        customerId: currentSale.customerId || null,\n        customerName: currentSale.customerName || '',\n        customerContainerQty: currentSale.customerContainerQty || 0\n      };\n      if (isEditing) {\n        await axios.put(`http://localhost:3001/api/sales/${saleToEditId}`, saleToSave);\n      } else {\n        await axios.post('http://localhost:3001/api/sales', saleToSave);\n      }\n      setShowModal(false);\n      fetchSales();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleDeleteClick = sale => {\n    setSaleToDelete(sale);\n    setShowDeleteModal(true);\n  };\n  const handleDeleteSale = async () => {\n    try {\n      await axios.delete(`http://localhost:3001/api/sales/${saleToDelete._id}`);\n      setShowDeleteModal(false);\n      setSaleToDelete(null);\n      fetchSales();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleMultiSalesImport = async () => {\n    if (!multiSalesInput) {\n      alert('Please enter sales records first.');\n      return;\n    }\n    let importing = true; // 🔑 local synchronous flag to avoid React async delays\n\n    const lines = multiSalesInput.trim().split('\\n');\n    let successCount = 0;\n    try {\n      console.log(\"Starting import...\");\n      for (let i = 0; i < lines.length; i++) {\n        if (!importing) {\n          console.log('Import stopped by user.');\n          break;\n        }\n        const line = lines[i];\n        const [date, customerName, type, item, quantity, totalAmount, paymentMethod, status, containersField, remarks] = line.split(';').map(f => f.trim());\n\n        // Process containers field\n        let customerContainerQty = 0;\n        let containerIds = [];\n        let containersOutput = [];\n        if (containersField) {\n          const containersArray = containersField.split(',').map(c => c.trim());\n          for (const c of containersArray) {\n            if (c.toLowerCase().startsWith('z')) {\n              // Scenario #1, #2, #5: own container qty\n              const qty = parseInt(c.substring(1));\n              if (!isNaN(qty)) customerContainerQty = qty;\n              containersOutput.push(`z${qty}`);\n            } else if (/^[drs]?\\d+$/i.test(c)) {\n              // Scenario #1, #2, #3, #4: known container IDs with optional prefix\n              let code = c.toUpperCase();\n\n              // Determine prefix if missing based on item type\n              if (!isNaN(code)) {\n                const idNum = parseInt(code).toString().padStart(3, '0');\n                if (item.toLowerCase().includes('slim')) {\n                  code = `S${idNum}`;\n                  console.log(`Assigned prefix 'S' for Slim item: ${code}`);\n                } else if (item.toLowerCase().includes('round')) {\n                  code = `R${idNum}`;\n                  console.log(`Assigned prefix 'R' for Round item: ${code}`);\n                } else if (item.toLowerCase().includes('dispenser')) {\n                  code = `D${idNum}`;\n                  console.log(`Assigned prefix 'D' for Dispenser item: ${code}`);\n                } else {\n                  console.log(`No matching item type found for code: ${code}`);\n                }\n              }\n\n              // Find container in Inventory by exact name only\n              const containerObj = containers.find(cont => cont && cont.name && cont.name.toUpperCase() === code);\n              if (containerObj) {\n                containerIds.push(containerObj._id);\n                containersOutput.push(containerObj.name);\n                console.log(`Matched container by name: ${containerObj.name}`);\n              } else {\n                // If not found, just push raw code\n                containersOutput.push(code);\n                console.log(`No container found for code: ${code}, pushed raw`);\n              }\n            } else if (/^[drs]\\?$/i.test(c)) {\n              // Scenario #5: unknown containers recorded as '?'\n              containersOutput.push(c.toLowerCase());\n              console.log(`Unknown container code: ${c}`);\n            } else {\n              // Any other unhandled format\n              containersOutput.push(c);\n              console.log(`Unhandled container format: ${c}`);\n            }\n          }\n        }\n        // Calculate\n        const qty = parseInt(quantity);\n        const total = parseFloat(totalAmount);\n        const pricePerUnit = qty !== 0 ? total / qty : 0;\n        const customer = customers.find(c => c.name.toLowerCase() === customerName.toLowerCase());\n        const sale = {\n          date: date || new Date().toISOString().split('T')[0],\n          customerId: customer ? customer._id : null,\n          customerName: customer ? customer.name : customerName,\n          type: type || 'Walk-in',\n          item: item || '',\n          quantity: qty || 1,\n          totalAmount: total || 0,\n          pricePerUnit: pricePerUnit || 0,\n          paymentMethod: paymentMethod || 'Cash',\n          status: status || 'Paid',\n          customerContainerQty,\n          containerIds,\n          remarks: `${remarks || ''}${customer ? '' : ` | CustomerName: ${customerName}`}`.trim()\n        };\n        await axios.post('http://localhost:3001/api/sales', sale);\n        successCount++;\n\n        // Update progress bar\n        setImportProgress(Math.round((i + 1) / lines.length * 100));\n      }\n\n      // Show success modal if all completed\n      if (successCount === lines.length) {\n        setImportResult(prev => ({\n          ...prev,\n          successCount\n        }));\n        setShowMultiAddModal(false);\n        setShowImportResultModal(true);\n      }\n      fetchSales();\n    } catch (err) {\n      console.error(err);\n      alert('Error importing sales. Check console for details.');\n    }\n  };\n  // ===============================\n  //  Adding Customer From Records\n  // ===============================\n  const handleAddCustomer = async () => {\n    const lines = multiSalesInput.split('\\n').map(line => line.trim()).filter(line => line);\n\n    // Assuming you have `lines` as the split input lines\n    for (const line of lines) {\n      if (!line.trim()) continue; // skip empty lines\n\n      const [date, customerName, type, item, quantity, totalAmount, paymentMethod, status, containersField, remarks] = line.split(';').map(f => f.trim());\n\n      // STEP 1: Initialize container variables\n      let customerContainerQty = 0;\n      let containerIds = [];\n      let containersOutput = [];\n\n      // STEP 2: Process containers field\n      if (containersField) {\n        const containersArray = containersField.split(',').map(c => c.trim());\n        for (const c of containersArray) {\n          if (c.toLowerCase().startsWith('z')) {\n            // Scenario #1, #2, #5: own container qty\n            const qty = parseInt(c.substring(1));\n            if (!isNaN(qty)) customerContainerQty = qty;\n            containersOutput.push(`z${qty}`);\n          } else if (/^[drs]?\\d+$/i.test(c)) {\n            // Scenario #1, #2, #3, #4: known container IDs with optional prefix\n            let code = c.toUpperCase();\n\n            // Scenario #3: if it's just numbers without prefix\n            if (!isNaN(code)) {\n              const idNum = parseInt(code).toString().padStart(3, '0');\n              if (item.toLowerCase().includes('slim')) {\n                code = `S${idNum}`;\n              } else if (item.toLowerCase().includes('round')) {\n                code = `R${idNum}`;\n              } else if (item.toLowerCase().includes('disp')) {\n                code = `D${idNum}`;\n              }\n            }\n\n            // Find container by exact name in inventory database\n            const containerObj = containers.find(cont => cont.name.toUpperCase() === code);\n            if (containerObj) {\n              containerIds.push(containerObj._id);\n              containersOutput.push(containerObj.name);\n            } else {\n              // If not found, just push raw code\n              containersOutput.push(code);\n            }\n          } else if (/^[drs]\\?$/i.test(c)) {\n            // Scenario #5: unknown containers recorded as '?'\n            containersOutput.push(c.toLowerCase());\n          } else {\n            // Any other unhandled format\n            containersOutput.push(c);\n          }\n        }\n      }\n\n      // STEP 3: Build saleData object\n      const saleData = {\n        date,\n        customerName,\n        type,\n        item,\n        quantity: parseInt(quantity),\n        totalAmount: parseFloat(totalAmount),\n        paymentMethod,\n        status,\n        remarks,\n        customerContainerQty,\n        containerIds,\n        // stores matched container ObjectIds\n        containersOutput // stores readable container codes for display\n      };\n\n      // Save to database (adjust this according to your context)\n      await Sales.create(saleData);\n      console.log(\"Imported sale:\", saleData);\n    }\n  };\n\n  // ===============================\n  //            RENDER\n  // ===============================\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShowAddModal,\n      children: \"Add Sale\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"secondary\",\n      onClick: () => {\n        setImportProgress(0); // reset progress\n        setShowMultiAddModal(true);\n      },\n      children: \"Add Multiple Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: editMode ? \"danger\" : \"warning\",\n      className: \"ms-2\",\n      onClick: () => {\n        setEditMode(!editMode);\n        setSelectedSalesIds([]);\n        setCheckAll(false);\n      },\n      children: editMode ? \"Exit Edit Mode\" : \"Edit Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 9\n    }, this), editMode && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"secondary\",\n      className: \"ms-2\",\n      disabled: selectedSalesIds.length === 0 || deleting,\n      onClick: () => setShowDeleteSelectedModal(true),\n      children: deleting ? 'Deleting...' : `Delete Selected (${selectedSalesIds.length})`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 11\n    }, this), deleting && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      style: {\n        width: '300px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar bg-danger\",\n          role: \"progressbar\",\n          style: {\n            width: `${deleteProgress}%`\n          },\n          \"aria-valuenow\": deleteProgress,\n          \"aria-valuemin\": \"0\",\n          \"aria-valuemax\": \"100\",\n          children: [deleteProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mt-2\",\n        children: \"Deleting... Please wait.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 11\n    }, this), deleteSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      className: \"mt-3\",\n      children: \"Selected items deleted successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [editMode && /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              checked: checkAll,\n              onChange: e => {\n                const allIds = sales.map(s => s._id);\n                setCheckAll(e.target.checked);\n                if (e.target.checked) {\n                  setSelectedSalesIds(allIds);\n                } else {\n                  setSelectedSalesIds([]);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Customer Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price Per Unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Containers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Remarks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this), editMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sales.sort((a, b) => new Date(a.date) - new Date(b.date)).map(s => {\n          var _s$pricePerUnit;\n          const isChecked = selectedSalesIds.includes(s._id);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [editMode && /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                checked: isChecked,\n                onChange: e => {\n                  if (e.target.checked) {\n                    const newSelected = [...selectedSalesIds, s._id];\n                    setSelectedSalesIds(newSelected);\n                    if (newSelected.length === sales.length) {\n                      setCheckAll(true);\n                    }\n                  } else {\n                    const newSelected = selectedSalesIds.filter(id => id !== s._id);\n                    setSelectedSalesIds(newSelected);\n                    setCheckAll(false);\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(s.date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (() => {\n                const customer = customers.find(c => {\n                  var _s$customerId;\n                  return c._id === (((_s$customerId = s.customerId) === null || _s$customerId === void 0 ? void 0 : _s$customerId._id) || s.customerId);\n                });\n                if (customer) {\n                  return /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: `/customers/${customer._id}/profile`,\n                    style: {\n                      textDecoration: 'underline'\n                    },\n                    children: customer.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 571,\n                    columnNumber: 27\n                  }, this);\n                } else {\n                  return s.customerName || '-';\n                }\n              })()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: s.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: s.item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: s.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-muted\",\n              children: [\"\\u20B1\", ((_s$pricePerUnit = s.pricePerUnit) === null || _s$pricePerUnit === void 0 ? void 0 : _s$pricePerUnit.toFixed(2)) || '0.00']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"\\u20B1\", s.totalAmount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: s.paymentMethod\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: s.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 17\n            }, this), sales.map(sale => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: sale.customerName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: sale.containersOutput.map((code, index) => {\n                  const containerObj = containers.find(cont => cont.name === code);\n                  return containerObj ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                      href: `/inventory/${containerObj._id}`,\n                      style: {\n                        textDecoration: 'underline'\n                      },\n                      children: code\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 595,\n                      columnNumber: 13\n                    }, this), index < sale.containersOutput.length - 1 ? ', ' : '']\n                  }, containerObj._id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 594,\n                    columnNumber: 11\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [code, index < sale.containersOutput.length - 1 ? ', ' : '']\n                  }, `unknown-${index}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 601,\n                    columnNumber: 11\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 5\n              }, this)]\n            }, sale._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 3\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"fst-italic\",\n              children: s.remarks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 18\n            }, this), editMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [!customers.some(c => c.name.toLowerCase() === s.customerName.toLowerCase()) && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  size: \"sm\",\n                  onClick: () => {\n                    setCurrentCustomer({\n                      name: s.customerName\n                    });\n                    setCurrentSaleId(s._id);\n                    setShowAddCustomerModal(true);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 631,\n                    columnNumber: 23\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"link\",\n                  size: \"sm\",\n                  onClick: () => handleShowEditModal(s),\n                  children: /*#__PURE__*/_jsxDEV(FaEdit, {\n                    color: \"orange\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 635,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 634,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"link\",\n                  size: \"sm\",\n                  onClick: () => handleDeleteClick(s),\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {\n                    color: \"red\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 638,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 18\n              }, this)\n            }, void 0, false)]\n          }, s._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => setShowModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: isEditing ? 'Edit Sale' : 'Add Sale'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              value: currentSale.date,\n              onChange: e => setCurrentSale({\n                ...currentSale,\n                date: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Customer Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typeahead, {\n              id: \"customer-typeahead\",\n              labelKey: \"name\" // which property to display as label\n              ,\n              options: customers // array of customers from database\n              ,\n              placeholder: \"Type customer name...\",\n              allowNew: true // allows typing new names not in the list\n              ,\n              newSelectionPrefix: \"New: \",\n              selected: (() => {\n                const found = customers.find(c => c._id === currentSale.customerId);\n                if (found) {\n                  return [found]; // show existing customer as selected\n                } else if (currentSale.customerName) {\n                  return [{\n                    name: currentSale.customerName\n                  }]; // show typed name as selected\n                } else {\n                  return []; // no selection\n                }\n              })(),\n              onChange: selected => {\n                if (selected.length > 0) {\n                  const sel = selected[0];\n                  if (sel._id) {\n                    setCurrentSale({\n                      ...currentSale,\n                      customerId: sel._id,\n                      customerName: sel.name\n                    });\n                  } else if (sel.name) {\n                    // New typed name\n                    setCurrentSale({\n                      ...currentSale,\n                      customerId: null,\n                      customerName: sel.name\n                    });\n                  } else if (typeof sel === 'string') {\n                    // Typed raw string (edge case)\n                    setCurrentSale({\n                      ...currentSale,\n                      customerId: null,\n                      customerName: sel\n                    });\n                  }\n                } else {\n                  // If cleared selection\n                  setCurrentSale({\n                    ...currentSale,\n                    customerId: null,\n                    customerName: ''\n                  });\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 50\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: currentSale.type === 'Walk-in' ? 'success' : 'outline-success',\n              onClick: () => setCurrentSale({\n                ...currentSale,\n                type: 'Walk-in'\n              }),\n              className: \"me-2\",\n              children: \"Walk-in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: currentSale.type === 'Delivery' ? 'primary' : 'outline-primary',\n              onClick: () => setCurrentSale({\n                ...currentSale,\n                type: 'Delivery'\n              }),\n              children: \"Delivery\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-wrap\",\n              children: [{\n                label: \"Refill (Slim 5gal)\",\n                bg: \"primary\"\n              }, {\n                label: \"Refill (Round 5gal)\",\n                bg: \"info\"\n              }, {\n                label: \"New (Slim 5gal)\",\n                bg: \"success\"\n              }, {\n                label: \"New (Round 5gal)\",\n                bg: \"success\"\n              }, {\n                label: \"Plan A - Standard Plan\",\n                bg: \"danger\"\n              }, {\n                label: \"Plan B - Family Plan\",\n                bg: \"danger\"\n              }, {\n                label: \"Plan C - Business Plan\",\n                bg: \"danger\"\n              }, {\n                label: \"Plan D - Enterprise Plan\",\n                bg: \"danger\"\n              }, {\n                label: \"Plan E - Custom Plan\",\n                bg: \"danger\"\n              }, {\n                label: \"Big Cap\",\n                bg: \"warning\"\n              }, {\n                label: \"Small Cap\",\n                bg: \"warning\"\n              }, {\n                label: \"Faucet\",\n                bg: \"warning\"\n              }, {\n                label: \"Others\",\n                bg: \"warning\"\n              }, {\n                label: \"Bottled Water (500mL)\",\n                bg: \"purple\"\n              }, {\n                label: \"Bottled Water (1000mL)\",\n                bg: \"purple\"\n              }, {\n                label: \"Dispenser\",\n                bg: \"info\"\n              }].map(item => {\n                const isSelected = currentSale.item === item.label;\n                return /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"sm\",\n                  variant: isSelected ? item.bg : `outline-${item.bg}`,\n                  className: \"me-2 mb-2\",\n                  onClick: () => setCurrentSale({\n                    ...currentSale,\n                    item: item.label\n                  }),\n                  style: {\n                    backgroundColor: item.bg === \"purple\" && isSelected ? \"#d6b3ff\" : item.bg === \"purple\" ? \"transparent\" : undefined,\n                    borderColor: item.bg === \"purple\" ? \"#d6b3ff\" : undefined,\n                    color: item.bg === \"purple\" && isSelected ? \"#5c2d91\" : item.bg === \"purple\" ? \"#5c2d91\" : undefined\n                  },\n                  children: item.label\n                }, item.label, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 764,\n                  columnNumber: 27\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              value: currentSale.quantity,\n              onChange: e => setCurrentSale({\n                ...currentSale,\n                quantity: Number(e.target.value)\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Total Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              value: currentSale.totalAmount,\n              onChange: e => setCurrentSale({\n                ...currentSale,\n                totalAmount: Number(e.target.value)\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              value: currentSale.paymentMethod,\n              onChange: e => setCurrentSale({\n                ...currentSale,\n                paymentMethod: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Cash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"GCash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Free\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 804,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 814,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              value: currentSale.status,\n              onChange: e => setCurrentSale({\n                ...currentSale,\n                status: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 819,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Unpaid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 820,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Free\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 821,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Containers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"me-2 d-flex align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  min: \"0\",\n                  placeholder: \"Owned\",\n                  value: currentSale.customerContainerQty,\n                  onChange: e => setCurrentSale({\n                    ...currentSale,\n                    customerContainerQty: Number(e.target.value)\n                  }),\n                  style: {\n                    width: \"100px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 829,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  flex: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(Typeahead, {\n                  id: \"container-typeahead\",\n                  labelKey: option => `${option.id} - ${option.name}`,\n                  options: containers,\n                  placeholder: \"Select containers...\",\n                  multiple: true,\n                  selected: containers.filter(c => {\n                    var _currentSale$containe;\n                    return (_currentSale$containe = currentSale.containerIds) === null || _currentSale$containe === void 0 ? void 0 : _currentSale$containe.includes(c._id);\n                  }),\n                  onChange: selected => {\n                    setCurrentSale({\n                      ...currentSale,\n                      containerIds: selected.map(s => s._id)\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 846,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 845,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Remarks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 2,\n              value: currentSale.remarks,\n              onChange: e => setCurrentSale({\n                ...currentSale,\n                remarks: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 878,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSaveSale,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showDeleteModal,\n      onHide: () => setShowDeleteModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Delete Sale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Are you sure you want to delete this sale?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowDeleteModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: handleDeleteSale,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 891,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 884,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showMultiAddModal,\n      onHide: () => setShowMultiAddModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add Multiple Sales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Enter multiple sales (one per line, semicolon-separated fields: date;customer name;type;quantity;total amount;payment method;status;containers;remarks)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 905,\n              columnNumber: 21\n            }, this), importProgress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"my-2\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-bar progress-bar-striped progress-bar-animated\",\n                  role: \"progressbar\",\n                  style: {\n                    width: `${importProgress}%`\n                  },\n                  \"aria-valuenow\": importProgress,\n                  \"aria-valuemin\": \"0\",\n                  \"aria-valuemax\": \"100\",\n                  children: [importProgress, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 909,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 908,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 907,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 10,\n              value: multiSalesInput,\n              onChange: e => setMultiSalesInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 904,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"mt-2\",\n            onClick: handleMultiSalesImport,\n            children: \"Import Sales\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 924,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowMultiAddModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 898,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showImportResultModal,\n      onHide: () => setShowImportResultModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Import Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: importResult.failedLine ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u2705 Successfully added: \", importResult.successCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 940,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u274C Failed at line: \", importResult.failedLine]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 941,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Error: \", importResult.errorMessage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 942,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u2705 All records successfully imported! Total added: \", importResult.successCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => {\n            setShowImportResultModal(false);\n            setShowMultiAddModal(false);\n            setImportProgress(0);\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 947,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 933,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showDeleteSelectedModal,\n      onHide: () => setShowDeleteSelectedModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Confirm Delete Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [\"Are you sure you want to delete \", selectedSalesIds.length, \" selected sale\", selectedSalesIds.length > 1 ? 's' : '', \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowDeleteSelectedModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: async () => {\n            try {\n              setShowDeleteSelectedModal(false);\n              setDeleting(true);\n              setDeleteProgress(0);\n              for (let i = 0; i < selectedSalesIds.length; i++) {\n                const id = selectedSalesIds[i];\n                await axios.delete(`http://localhost:3001/api/sales/${id}`);\n                setDeleteProgress(Math.round((i + 1) / selectedSalesIds.length * 100));\n              }\n              setDeleteSuccess(true);\n              setTimeout(() => setDeleteSuccess(false), 3000);\n              fetchSales();\n              setSelectedSalesIds([]);\n              setCheckAll(false);\n            } catch (err) {\n              console.error(err);\n              alert('Error deleting selected sales.');\n            } finally {\n              setDeleting(false);\n              setDeleteProgress(0);\n            }\n          },\n          children: \"Confirm Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 961,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAddCustomerModal,\n      onHide: () => setShowAddCustomerModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1009,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1008,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1014,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: currentCustomer.name || '',\n              onChange: e => setCurrentCustomer({\n                ...currentCustomer,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1015,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1013,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Nickname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: currentCustomer.nickname || '',\n              onChange: e => setCurrentCustomer({\n                ...currentCustomer,\n                nickname: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1026,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1036,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: currentCustomer.phone || '',\n              onChange: e => setCurrentCustomer({\n                ...currentCustomer,\n                phone: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1037,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1035,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1047,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: currentCustomer.address || '',\n              onChange: e => setCurrentCustomer({\n                ...currentCustomer,\n                address: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1048,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1046,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Landmark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1058,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: currentCustomer.landmark || '',\n              onChange: e => setCurrentCustomer({\n                ...currentCustomer,\n                landmark: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1059,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1057,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Frequency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1069,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              value: currentCustomer.frequency || '',\n              onChange: e => setCurrentCustomer({\n                ...currentCustomer,\n                frequency: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1070,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1068,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Birthday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1080,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              value: currentCustomer.birthday || '',\n              onChange: e => setCurrentCustomer({\n                ...currentCustomer,\n                birthday: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1081,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1079,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Last Transaction Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1091,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              value: currentCustomer.lastTransactionDate || '',\n              onChange: e => setCurrentCustomer({\n                ...currentCustomer,\n                lastTransactionDate: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1092,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1090,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Remarks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1105,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 2,\n              value: currentCustomer.remarks || '',\n              onChange: e => setCurrentCustomer({\n                ...currentCustomer,\n                remarks: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1106,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1104,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1012,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1011,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowAddCustomerModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1118,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleAddCustomer,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1121,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1117,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1007,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showSuccessModal,\n      onHide: () => setShowSuccessModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1129,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1128,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1132,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1131,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => {\n            setShowSuccessModal(false);\n            fetchSales(); // refresh when modal is closed\n          },\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1135,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1134,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1127,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 439,\n    columnNumber: 5\n  }, this);\n}\n_s(Sales, \"ddPEj1dXSd+bdXiKodB2Yj7KFTs=\");\n_c = Sales;\nexport default Sales;\n\n/*\r\n2025-07-22;Test Customer 1;Walk-In;Refill (Round 5gal);1;25;Cash;Paid;z1, R023;Scenario #1 test\r\n2025-07-22;Test Customer 2;Walk-In;Refill (Slim 5gal);1;25;Cash;Paid;z1, S052;Scenario #2 test\r\n2025-07-22;Test Customer 2.1;Walk-In;Refill (Slim 5gal);1;25;Cash;Paid;z6, S069, S042, S245;Scenario #2 test\r\n2025-07-22;Test Customer 2.2;Walk-In;Refill (Slim 5gal);1;25;Cash;Paid;z3, R069, R042, R245;Scenario #2 test\r\n2025-07-22;Test Customer 3;Walk-In;Refill (Slim 5gal);4;100;Cash;Paid;2, 005, 07, 99;Scenario #3 Slim test\r\n2025-07-22;Test Customer 4;Walk-In;Refill (Round 5gal);4;100;Cash;Paid;2, 005, 07, 99;Scenario #3 Round test\r\n2025-07-22;Test Customer 5;Walk-In;Dispenser;1;500;Cash;Paid;D04;Scenario #4 test \r\n2025-07-22;Test Customer 6;Walk-In;Refill (Slim 5gal);8;200;Cash;Paid;z5, s?, s?, s?;Scenario #5 test \r\n\r\n\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","Button","Form","Alert","Typeahead","FaEdit","FaTrash","FaPlus","jsxDEV","_jsxDEV","Fragment","_Fragment","Sales","_s","sales","setSales","customers","setCustomers","containers","setContainers","showModal","setShowModal","isEditing","setIsEditing","editMode","setEditMode","selectedSalesIds","setSelectedSalesIds","checkAll","setCheckAll","showDeleteSelectedModal","setShowDeleteSelectedModal","deleting","setDeleting","deleteProgress","setDeleteProgress","deleteSuccess","setDeleteSuccess","showSuccessModal","setShowSuccessModal","successMessage","setSuccessMessage","currentSale","setCurrentSale","date","Date","toISOString","split","customerId","containerId","type","item","quantity","pricePerUnit","totalAmount","paymentMethod","status","remarks","saleToEditId","setSaleToEditId","showDeleteModal","setShowDeleteModal","saleToDelete","setSaleToDelete","showMultiAddModal","setShowMultiAddModal","multiSalesInput","setMultiSalesInput","importProgress","setImportProgress","showImportResultModal","setShowImportResultModal","importResult","setImportResult","successCount","failedLine","errorMessage","currentSaleId","setCurrentSaleId","showAddCustomerModal","setShowAddCustomerModal","currentCustomer","setCurrentCustomer","name","nickname","phone","address","landmark","birthday","containersOutput","fetchSales","fetchCustomers","res","get","data","err","console","error","fetchContainers","handleShowAddModal","handleShowEditModal","sale","_sale$customerId","_id","substring","customerName","containerIds","handleSaveSale","calculatedPricePerUnit","saleToSave","customerContainerQty","put","post","handleDeleteClick","handleDeleteSale","delete","handleMultiSalesImport","alert","importing","lines","trim","log","i","length","line","containersField","map","f","containersArray","c","toLowerCase","startsWith","qty","parseInt","isNaN","push","test","code","toUpperCase","idNum","toString","padStart","includes","containerObj","find","cont","total","parseFloat","customer","Math","round","prev","handleAddCustomer","filter","saleData","create","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","className","disabled","width","role","Check","checked","onChange","e","allIds","s","target","sort","a","b","_s$pricePerUnit","isChecked","newSelected","id","toLocaleDateString","_s$customerId","href","textDecoration","toFixed","index","some","size","color","show","onHide","Header","closeButton","Title","Body","Group","Label","Control","value","labelKey","options","placeholder","allowNew","newSelectionPrefix","selected","found","sel","label","bg","isSelected","backgroundColor","undefined","borderColor","Number","Select","min","flex","option","multiple","_currentSale$containe","as","rows","Footer","setTimeout","frequency","lastTransactionDate","_c","$RefreshReg$"],"sources":["D:/GameProjects/JacksWRS App/frontend/jackswrsapp/src/pages/Sales.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport { FaEdit, FaTrash, FaPlus } from 'react-icons/fa';\r\n\r\nfunction Sales() {\r\n    const [sales, setSales] = useState([]);\r\n    const [customers, setCustomers] = useState([]);\r\n    const [containers, setContainers] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);  \r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [selectedSalesIds, setSelectedSalesIds] = useState([]);\r\n    const [checkAll, setCheckAll] = useState(false);\r\n    const [showDeleteSelectedModal, setShowDeleteSelectedModal] = useState(false);\r\n    const [deleting, setDeleting] = useState(false);\r\n    const [deleteProgress, setDeleteProgress] = useState(0);\r\n    const [deleteSuccess, setDeleteSuccess] = useState(false);\r\n    const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    const [currentSale, setCurrentSale] = useState({\r\n      date: new Date().toISOString().split('T')[0],\r\n      customerId: '',\r\n      containerId: '',\r\n      type: 'Delivery',\r\n      item: '',\r\n      quantity: 1,\r\n      pricePerUnit: 0,\r\n      totalAmount: 0,\r\n      paymentMethod: 'Cash',\r\n      status: 'Paid',\r\n      remarks: ''\r\n    });\r\n\r\n    const [saleToEditId, setSaleToEditId] = useState(null);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const [saleToDelete, setSaleToDelete] = useState(null);\r\n    const [showMultiAddModal, setShowMultiAddModal] = useState(false);\r\n    const [multiSalesInput, setMultiSalesInput] = useState('');\r\n\r\n    const [importProgress, setImportProgress] = useState(0);\r\n    const [showImportResultModal, setShowImportResultModal] = useState(false);\r\n    const [importResult, setImportResult] = useState({ successCount: 0, failedLine: null, errorMessage: '' });\r\n\r\n    const [currentSaleId, setCurrentSaleId] = useState(null);\r\n    const [showAddCustomerModal, setShowAddCustomerModal] = useState(false);\r\n    const [currentCustomer, setCurrentCustomer] = useState({\r\n      name: '',\r\n      nickname: '',\r\n      phone: '',\r\n      address: '',\r\n      landmark: '',\r\n      birthday: '',\r\n      remarks: '',\r\n      containersOutput: containersOutput || []\r\n    });\r\n\r\n    \r\n\r\n\r\n  // ===============================\r\n  // LOAD SALES & CUSTOMERS\r\n  // ===============================\r\n  useEffect(() => {\r\n    fetchSales();\r\n    fetchCustomers();\r\n  }, []);\r\n\r\n  const fetchSales = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:3001/api/sales');\r\n      setSales(res.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const fetchCustomers = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:3001/api/customers');\r\n      setCustomers(res.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const fetchContainers = async () => {\r\n  try {\r\n    const res = await axios.get('http://localhost:3001/api/inventory');\r\n    setContainers(res.data);\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nuseEffect(() => {\r\n  fetchSales();\r\n  fetchCustomers();\r\n  fetchContainers(); // load containers\r\n}, []);\r\n  // ===============================\r\n  // HANDLERS\r\n  // ===============================\r\n  const handleShowAddModal = () => {\r\n    setIsEditing(false);\r\n    setCurrentSale({\r\n      name: '',\r\n      date: new Date().toISOString().split('T')[0],\r\n      customerId: '',\r\n      containerId: '',\r\n      type: 'Delivery',\r\n      item: 'Refill (Slim 5gal)',\r\n      quantity: 1,\r\n      pricePerUnit: 0,\r\n      totalAmount: 0,\r\n      paymentMethod: 'Cash',\r\n      status: 'Paid',\r\n      remarks: ''\r\n    });\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleShowEditModal = (sale) => {\r\n    setIsEditing(true);\r\n    setSaleToEditId(sale._id);\r\n    setCurrentSale({\r\n      date: sale.date ? sale.date.substring(0,10) : new Date().toISOString().split('T')[0],\r\n      customerId: sale.customerId?._id || '',\r\n      customerName: sale.customerName || '',\r\n      type: sale.type,\r\n      item: sale.item || '',\r\n      quantity: sale.quantity,\r\n      pricePerUnit: sale.pricePerUnit || 0,\r\n      totalAmount: sale.totalAmount,\r\n      paymentMethod: sale.paymentMethod,\r\n      status: sale.status,\r\n      containerIds: sale.containerIds || [],\r\n      remarks: sale.remarks || ''\r\n    });\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleSaveSale = async () => {\r\n    try {\r\n      const calculatedPricePerUnit = currentSale.totalAmount && currentSale.quantity\r\n        ? currentSale.totalAmount / currentSale.quantity\r\n        : 0;\r\n\r\n    const saleToSave = { \r\n      ...currentSale, \r\n      pricePerUnit: calculatedPricePerUnit,\r\n      customerId: currentSale.customerId || null,\r\n      customerName: currentSale.customerName || '',\r\n      customerContainerQty: currentSale.customerContainerQty || 0,\r\n    };\r\n\r\n\r\n      if (isEditing) {\r\n        await axios.put(`http://localhost:3001/api/sales/${saleToEditId}`, saleToSave);\r\n      } else {\r\n        await axios.post('http://localhost:3001/api/sales', saleToSave);\r\n      }\r\n\r\n      setShowModal(false);\r\n      fetchSales();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = (sale) => {\r\n    setSaleToDelete(sale);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  const handleDeleteSale = async () => {\r\n    try {\r\n      await axios.delete(`http://localhost:3001/api/sales/${saleToDelete._id}`);\r\n      setShowDeleteModal(false);\r\n      setSaleToDelete(null);\r\n      fetchSales();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n\r\nconst handleMultiSalesImport = async () => {    \r\n  if (!multiSalesInput) {\r\n    alert('Please enter sales records first.');\r\n    return;\r\n  }\r\n\r\n  let importing = true; // 🔑 local synchronous flag to avoid React async delays\r\n\r\n  const lines = multiSalesInput.trim().split('\\n');\r\n  let successCount = 0;\r\n\r\n  try {\r\n      console.log(\"Starting import...\");\r\nfor (let i = 0; i < lines.length; i++) {\r\n      if (!importing) {\r\n        console.log('Import stopped by user.');\r\n        break;\r\n      }\r\n\r\n      const line = lines[i];\r\n      const [date, customerName, type, item, quantity, totalAmount, paymentMethod, status, containersField, remarks] = line.split(';').map(f => f.trim());\r\n\r\n// Process containers field\r\nlet customerContainerQty = 0;\r\nlet containerIds = [];\r\nlet containersOutput = [];\r\n\r\nif (containersField) {\r\n  const containersArray = containersField.split(',').map(c => c.trim());\r\n  for (const c of containersArray) {\r\n\r\n  if (c.toLowerCase().startsWith('z')) {\r\n    // Scenario #1, #2, #5: own container qty\r\n    const qty = parseInt(c.substring(1));\r\n    if (!isNaN(qty)) customerContainerQty = qty;\r\n    containersOutput.push(`z${qty}`);\r\n  }\r\n\r\n  else if (/^[drs]?\\d+$/i.test(c)) {\r\n    // Scenario #1, #2, #3, #4: known container IDs with optional prefix\r\n    let code = c.toUpperCase();\r\n\r\n    // Determine prefix if missing based on item type\r\n    if (!isNaN(code)) {\r\n      const idNum = parseInt(code).toString().padStart(3, '0');\r\n\r\n      if (item.toLowerCase().includes('slim')) {\r\n        code = `S${idNum}`;\r\n        console.log(`Assigned prefix 'S' for Slim item: ${code}`);\r\n      }\r\n      else if (item.toLowerCase().includes('round')) {\r\n        code = `R${idNum}`;\r\n        console.log(`Assigned prefix 'R' for Round item: ${code}`);\r\n      }\r\n      else if (item.toLowerCase().includes('dispenser')) {\r\n        code = `D${idNum}`;\r\n        console.log(`Assigned prefix 'D' for Dispenser item: ${code}`);\r\n      }\r\n      else {\r\n        console.log(`No matching item type found for code: ${code}`);\r\n      }\r\n    }\r\n\r\n    // Find container in Inventory by exact name only\r\n    const containerObj = containers.find(cont =>\r\n      cont && cont.name && cont.name.toUpperCase() === code\r\n    );\r\n\r\n    if (containerObj) {\r\n      containerIds.push(containerObj._id);\r\n      containersOutput.push(containerObj.name);\r\n      console.log(`Matched container by name: ${containerObj.name}`);\r\n    } else {\r\n      // If not found, just push raw code\r\n      containersOutput.push(code);\r\n      console.log(`No container found for code: ${code}, pushed raw`);\r\n    }\r\n  }\r\n\r\n  else if (/^[drs]\\?$/i.test(c)) {\r\n    // Scenario #5: unknown containers recorded as '?'\r\n    containersOutput.push(c.toLowerCase());\r\n    console.log(`Unknown container code: ${c}`);\r\n  }\r\n\r\n  else {\r\n    // Any other unhandled format\r\n    containersOutput.push(c);\r\n    console.log(`Unhandled container format: ${c}`);\r\n  }\r\n\r\n}\r\n}\r\n      // Calculate\r\n      const qty = parseInt(quantity);\r\n      const total = parseFloat(totalAmount);\r\n      const pricePerUnit = qty !== 0 ? total / qty : 0;\r\n\r\n      const customer = customers.find(c => c.name.toLowerCase() === customerName.toLowerCase());\r\n\r\n      const sale = {\r\n        date: date || new Date().toISOString().split('T')[0],\r\n        customerId: customer ? customer._id : null,\r\n        customerName: customer ? customer.name : customerName,\r\n        type: type || 'Walk-in',\r\n        item: item || '',\r\n        quantity: qty || 1,\r\n        totalAmount: total || 0,\r\n        pricePerUnit: pricePerUnit || 0,\r\n        paymentMethod: paymentMethod || 'Cash',\r\n        status: status || 'Paid',\r\n        customerContainerQty,\r\n        containerIds,\r\n        \r\n        remarks: `${remarks || ''}${customer ? '' : ` | CustomerName: ${customerName}`}`.trim(),\r\n      };\r\n\r\n      await axios.post('http://localhost:3001/api/sales', sale);\r\n      \r\n      successCount++;\r\n\r\n      // Update progress bar\r\n      setImportProgress(Math.round(((i + 1) / lines.length) * 100));\r\n    }\r\n\r\n    // Show success modal if all completed\r\n    if (successCount === lines.length) {\r\n      setImportResult(prev => ({ \r\n        ...prev, \r\n        successCount \r\n    }));\r\n\r\n      setShowMultiAddModal(false);\r\n      setShowImportResultModal(true);\r\n    }\r\n\r\n    fetchSales();\r\n\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert('Error importing sales. Check console for details.');\r\n  }\r\n};\r\n  // ===============================\r\n  //  Adding Customer From Records\r\n  // ===============================\r\nconst handleAddCustomer = async () => {\r\nconst lines = multiSalesInput.split('\\n').map(line => line.trim()).filter(line => line);\r\n\r\n // Assuming you have `lines` as the split input lines\r\nfor (const line of lines) {\r\n  if (!line.trim()) continue; // skip empty lines\r\n\r\n  const [date, customerName, type, item, quantity, totalAmount, paymentMethod, status, containersField, remarks] = line.split(';').map(f => f.trim());\r\n\r\n  // STEP 1: Initialize container variables\r\n  let customerContainerQty = 0;\r\n  let containerIds = [];\r\n  let containersOutput = [];\r\n\r\n  // STEP 2: Process containers field\r\n  if (containersField) {\r\n    const containersArray = containersField.split(',').map(c => c.trim());\r\n    for (const c of containersArray) {\r\n\r\n      if (c.toLowerCase().startsWith('z')) {\r\n        // Scenario #1, #2, #5: own container qty\r\n        const qty = parseInt(c.substring(1));\r\n        if (!isNaN(qty)) customerContainerQty = qty;\r\n        containersOutput.push(`z${qty}`);\r\n      }\r\n\r\n      else if (/^[drs]?\\d+$/i.test(c)) {\r\n        // Scenario #1, #2, #3, #4: known container IDs with optional prefix\r\n        let code = c.toUpperCase();\r\n\r\n        // Scenario #3: if it's just numbers without prefix\r\n        if (!isNaN(code)) {\r\n          const idNum = parseInt(code).toString().padStart(3, '0');\r\n\r\n          if (item.toLowerCase().includes('slim')) {\r\n            code = `S${idNum}`;\r\n          }\r\n          else if (item.toLowerCase().includes('round')) {\r\n            code = `R${idNum}`;\r\n          }\r\n          else if (item.toLowerCase().includes('disp')) {\r\n            code = `D${idNum}`;\r\n          }\r\n        }\r\n\r\n        // Find container by exact name in inventory database\r\n        const containerObj = containers.find(cont =>\r\n          cont.name.toUpperCase() === code\r\n        );\r\n\r\n        if (containerObj) {\r\n          containerIds.push(containerObj._id);\r\n          containersOutput.push(containerObj.name);\r\n        } else {\r\n          // If not found, just push raw code\r\n          containersOutput.push(code);\r\n        }\r\n      }\r\n\r\n      else if (/^[drs]\\?$/i.test(c)) {\r\n        // Scenario #5: unknown containers recorded as '?'\r\n        containersOutput.push(c.toLowerCase());\r\n      }\r\n\r\n      else {\r\n        // Any other unhandled format\r\n        containersOutput.push(c);\r\n      }\r\n    }\r\n  }\r\n\r\n  // STEP 3: Build saleData object\r\n  const saleData = {\r\n    date,\r\n    customerName,\r\n    type,\r\n    item,\r\n    quantity: parseInt(quantity),\r\n    totalAmount: parseFloat(totalAmount),\r\n    paymentMethod,\r\n    status,\r\n    remarks,\r\n    customerContainerQty,\r\n    containerIds,       // stores matched container ObjectIds\r\n    containersOutput    // stores readable container codes for display\r\n  };\r\n\r\n  // Save to database (adjust this according to your context)\r\n  await Sales.create(saleData);\r\n\r\n  console.log(\"Imported sale:\", saleData);\r\n}};\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // ===============================\r\n  //            RENDER\r\n  // ===============================\r\nreturn (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>Sales</h2>\r\n\r\n      <Button variant=\"primary\" onClick={handleShowAddModal}>Add Sale</Button>\r\n      <Button\r\n          variant=\"secondary\"\r\n          onClick={() => {\r\n            setImportProgress(0);  // reset progress\r\n            setShowMultiAddModal(true);\r\n          }}\r\n        >\r\n          Add Multiple Sales\r\n        </Button>\r\n        <Button\r\n          variant={editMode ? \"danger\" : \"warning\"}\r\n          className=\"ms-2\"\r\n          onClick={() => {\r\n            setEditMode(!editMode);\r\n            setSelectedSalesIds([]);\r\n            setCheckAll(false);\r\n          }}\r\n        >\r\n          {editMode ? \"Exit Edit Mode\" : \"Edit Mode\"}\r\n        </Button>\r\n\r\n        {editMode && (\r\n          <Button\r\n            variant=\"secondary\"\r\n            className=\"ms-2\"\r\n            disabled={selectedSalesIds.length === 0 || deleting}\r\n            onClick={() => setShowDeleteSelectedModal(true)}\r\n          >\r\n            {deleting ? 'Deleting...' : `Delete Selected (${selectedSalesIds.length})`}\r\n          </Button>\r\n        )}\r\n\r\n        {deleting && (\r\n          <div className=\"mt-3\" style={{ width: '300px' }}>\r\n            <div className=\"progress\">\r\n              <div\r\n                className=\"progress-bar bg-danger\"\r\n                role=\"progressbar\"\r\n                style={{ width: `${deleteProgress}%` }}\r\n                aria-valuenow={deleteProgress}\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n              >\r\n                {deleteProgress}%\r\n              </div>\r\n            </div>\r\n            <div className=\"text-center mt-2\">Deleting... Please wait.</div>\r\n          </div>\r\n        )}\r\n\r\n        {deleteSuccess && (\r\n          <Alert variant=\"success\" className=\"mt-3\">\r\n            Selected items deleted successfully!\r\n          </Alert>\r\n        )}\r\n\r\n      <table className=\"table mt-3\">\r\n        <thead>\r\n          <tr>\r\n            {editMode && (\r\n              <th>\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  checked={checkAll}\r\n                  onChange={(e) => {\r\n                    const allIds = sales.map(s => s._id);\r\n                    setCheckAll(e.target.checked);\r\n                    if (e.target.checked) {\r\n                      setSelectedSalesIds(allIds);\r\n                    } else {\r\n                      setSelectedSalesIds([]);\r\n                    }\r\n                  }}\r\n                />\r\n              </th>\r\n            )}\r\n            <th>Date</th>\r\n            <th>Customer Name</th>\r\n            <th>Type</th>\r\n            <th>Item</th>\r\n            <th>Quantity</th>\r\n            <th>Price Per Unit</th>\r\n            <th>Total</th>\r\n            <th>Payment</th>\r\n            <th>Status</th>\r\n            <th>Containers</th>\r\n            <th>Remarks</th>\r\n            {editMode && (\r\n                <>            \r\n                <th>Actions</th>\r\n                </>\r\n            )}\r\n            \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            {sales\r\n            .sort((a, b) => new Date(a.date) - new Date(b.date))\r\n            .map(s => {\r\n              const isChecked = selectedSalesIds.includes(s._id);\r\n              return (\r\n              <tr key={s._id}>\r\n                {editMode && (\r\n                <td>\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    checked={isChecked}\r\n                    onChange={(e) => {\r\n                      if (e.target.checked) {\r\n                        const newSelected = [...selectedSalesIds, s._id];\r\n                        setSelectedSalesIds(newSelected);\r\n                        if (newSelected.length === sales.length) {\r\n                          setCheckAll(true);\r\n                        }\r\n                      } else {\r\n                        const newSelected = selectedSalesIds.filter(id => id !== s._id);\r\n                        setSelectedSalesIds(newSelected);\r\n                        setCheckAll(false);\r\n                      }\r\n                    }}\r\n                  />\r\n                </td>)}\r\n                <td>{new Date(s.date).toLocaleDateString()}</td>\r\n                <td>\r\n                    {(() => {\r\n                      const customer = customers.find(c => c._id === (s.customerId?._id || s.customerId));\r\n                      if (customer) {\r\n                        return (\r\n                          <a href={`/customers/${customer._id}/profile`} style={{ textDecoration: 'underline' }}>\r\n                            {customer.name}\r\n                          </a>\r\n                        );\r\n                      } else {\r\n                        return s.customerName || '-';\r\n                      }\r\n                    })()}\r\n                  </td>\r\n                <td>{s.type}</td>\r\n                <td>{s.item}</td>\r\n                <td>{s.quantity}</td>\r\n                <td className=\"text-muted\">₱{s.pricePerUnit?.toFixed(2) || '0.00'}</td>\r\n                <td>₱{s.totalAmount}</td>\r\n                <td>{s.paymentMethod}</td>\r\n                <td>{s.status}</td>\r\n{sales.map((sale) => (\r\n  <tr key={sale._id}>\r\n    <td>{sale.customerName}</td>\r\n    <td>\r\n      {sale.containersOutput.map((code, index) => {\r\n        const containerObj = containers.find(cont => cont.name === code);\r\n        return containerObj ? (\r\n          <span key={containerObj._id}>\r\n            <a href={`/inventory/${containerObj._id}`} style={{ textDecoration: 'underline' }}>\r\n              {code}\r\n            </a>\r\n            {index < sale.containersOutput.length - 1 ? ', ' : ''}\r\n          </span>\r\n        ) : (\r\n          <span key={`unknown-${index}`}>\r\n            {code}\r\n            {index < sale.containersOutput.length - 1 ? ', ' : ''}\r\n          </span>\r\n        );\r\n      })}\r\n    </td>\r\n  </tr>\r\n))}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                 <td className=\"fst-italic\">{s.remarks}</td>\r\n                 {editMode && (\r\n                  <>\r\n                 <td>\r\n                  {!customers.some(c => c.name.toLowerCase() === s.customerName.toLowerCase()) && (\r\n                    <Button\r\n                      variant=\"success\"\r\n                      size=\"sm\"\r\n                      onClick={() => {\r\n                        setCurrentCustomer({ name: s.customerName });\r\n                        setCurrentSaleId(s._id);\r\n                        setShowAddCustomerModal(true);\r\n                      }}\r\n                    >\r\n                      <FaPlus /> {/* or your add icon */}\r\n                    </Button>\r\n                )}\r\n                    <Button variant=\"link\" size=\"sm\" onClick={() => handleShowEditModal(s)}>\r\n                      <FaEdit color=\"orange\" />\r\n                    </Button>\r\n                    <Button variant=\"link\" size=\"sm\" onClick={() => handleDeleteClick(s)}>\r\n                      <FaTrash color=\"red\" />\r\n                    </Button>\r\n                  </td>\r\n                  </>\r\n                 )}  \r\n            </tr>\r\n          );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n\r\n\r\n\r\n      {/* Add/Edit Modal */}\r\n    <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>{isEditing ? 'Edit Sale' : 'Add Sale'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label>Date</Form.Label>\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      value={currentSale.date}\r\n                      onChange={(e) => setCurrentSale({ ...currentSale, date: e.target.value })}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Customer Name</Form.Label>\r\n                        <Typeahead\r\n                            id=\"customer-typeahead\"\r\n                            labelKey=\"name\" // which property to display as label\r\n                            options={customers} // array of customers from database\r\n                            placeholder=\"Type customer name...\"\r\n                            allowNew // allows typing new names not in the list\r\n                            newSelectionPrefix=\"New: \"\r\n                  \r\n                            selected={\r\n                                (() => {\r\n                                  const found = customers.find(c => c._id === currentSale.customerId);\r\n                                  if (found) {\r\n                                    return [found]; // show existing customer as selected\r\n                                  } else if (currentSale.customerName) {\r\n                                    return [{ name: currentSale.customerName }]; // show typed name as selected\r\n                                  } else {\r\n                                    return []; // no selection\r\n                                  }\r\n                                })()\r\n                            }\r\n            \r\n                            onChange={(selected) => {\r\n                                if (selected.length > 0) {\r\n                                    const sel = selected[0];\r\n                                    if (sel._id) {\r\n                                        setCurrentSale({\r\n                                          ...currentSale,\r\n                                          customerId: sel._id,\r\n                                          customerName: sel.name\r\n                                      });\r\n                                    } else if (sel.name) {\r\n                                        // New typed name\r\n                                        setCurrentSale({\r\n                                          ...currentSale,\r\n                                          customerId: null,\r\n                                          customerName: sel.name\r\n                                        });\r\n                                    } else if (typeof sel === 'string') {\r\n                                        // Typed raw string (edge case)\r\n                                        setCurrentSale({\r\n                                          ...currentSale,\r\n                                          customerId: null,\r\n                                          customerName: sel\r\n                                        });\r\n                                    }\r\n                                } else {\r\n                                    // If cleared selection\r\n                                    setCurrentSale({\r\n                                      ...currentSale,\r\n                                      customerId: null,\r\n                                      customerName: ''\r\n                                    });\r\n                                }\r\n                            }}\r\n                        />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Type</Form.Label><br/>\r\n                    <Button\r\n                      variant={currentSale.type === 'Walk-in' ? 'success' : 'outline-success'}\r\n                      onClick={() => setCurrentSale({ ...currentSale, type: 'Walk-in' })}\r\n                      className=\"me-2\"\r\n                    >\r\n                        Walk-in\r\n                    </Button>\r\n                    <Button\r\n                      variant={currentSale.type === 'Delivery' ? 'primary' : 'outline-primary'}\r\n                      onClick={() => setCurrentSale({ ...currentSale, type: 'Delivery' })}\r\n                    >\r\n                        Delivery\r\n                    </Button>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Item</Form.Label>\r\n                    <div className=\"d-flex flex-wrap\">\r\n                      {[\r\n                        { label: \"Refill (Slim 5gal)\", bg: \"primary\" },\r\n                        { label: \"Refill (Round 5gal)\", bg: \"info\" },\r\n                        { label: \"New (Slim 5gal)\", bg: \"success\" },\r\n                        { label: \"New (Round 5gal)\", bg: \"success\" },\r\n                        { label: \"Plan A - Standard Plan\", bg: \"danger\" },\r\n                        { label: \"Plan B - Family Plan\", bg: \"danger\" },\r\n                        { label: \"Plan C - Business Plan\", bg: \"danger\" },\r\n                        { label: \"Plan D - Enterprise Plan\", bg: \"danger\" },\r\n                        { label: \"Plan E - Custom Plan\", bg: \"danger\" },\r\n                        { label: \"Big Cap\", bg: \"warning\" },\r\n                        { label: \"Small Cap\", bg: \"warning\" },\r\n                        { label: \"Faucet\", bg: \"warning\" },\r\n                        { label: \"Others\", bg: \"warning\" },\r\n                        { label: \"Bottled Water (500mL)\", bg: \"purple\" },\r\n                        { label: \"Bottled Water (1000mL)\", bg: \"purple\" },\r\n                        { label: \"Dispenser\", bg: \"info\" },\r\n                      ].map(item => {\r\n                        const isSelected = currentSale.item === item.label;\r\n                        return (\r\n                          <Button\r\n                            key={item.label}\r\n                            size=\"sm\"\r\n                            variant={isSelected ? item.bg : `outline-${item.bg}`}\r\n                            className=\"me-2 mb-2\"\r\n                            onClick={() => setCurrentSale({ ...currentSale, item: item.label })}\r\n                            style={{\r\n                              backgroundColor: item.bg === \"purple\" && isSelected ? \"#d6b3ff\"\r\n                                               : item.bg === \"purple\" ? \"transparent\"\r\n                                               : undefined,\r\n                              borderColor: item.bg === \"purple\" ? \"#d6b3ff\" : undefined,\r\n                              color: item.bg === \"purple\" && isSelected ? \"#5c2d91\"\r\n                                    : item.bg === \"purple\" ? \"#5c2d91\"\r\n                                    : undefined,\r\n                            }}\r\n                          >\r\n                            {item.label}\r\n                          </Button>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                </Form.Group>\r\n                <Form.Group>\r\n            <Form.Label>Quantity</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              value={currentSale.quantity}\r\n              onChange={(e) => setCurrentSale({ ...currentSale, quantity: Number(e.target.value) })}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Total Amount</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              value={currentSale.totalAmount}\r\n              onChange={(e) => setCurrentSale({ ...currentSale, totalAmount: Number(e.target.value) })}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Payment Method</Form.Label>\r\n            <Form.Select\r\n              value={currentSale.paymentMethod}\r\n              onChange={(e) => setCurrentSale({ ...currentSale, paymentMethod: e.target.value })}\r\n            >\r\n              <option>Cash</option>\r\n              <option>GCash</option>\r\n              <option>Free</option>\r\n            </Form.Select>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Status</Form.Label>\r\n            <Form.Select\r\n              value={currentSale.status}\r\n              onChange={(e) => setCurrentSale({ ...currentSale, status: e.target.value })}\r\n            >\r\n              <option>Paid</option>\r\n              <option>Unpaid</option>\r\n              <option>Free</option>\r\n            </Form.Select>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Containers</Form.Label>\r\n            <div className=\"d-flex align-items-center\">\r\n              {/* Owned qty input */}\r\n              <div className=\"me-2 d-flex align-items-center\">\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  placeholder=\"Owned\"\r\n                  value={currentSale.customerContainerQty}\r\n                  onChange={(e) =>\r\n                    setCurrentSale({\r\n                      ...currentSale,\r\n                      customerContainerQty: Number(e.target.value)\r\n                    })\r\n                  }\r\n                  style={{ width: \"100px\" }}\r\n                />\r\n              </div>\r\n              \r\n              {/* Select containers Typeahead */}\r\n              <div style={{ flex: 1 }}>\r\n                <Typeahead\r\n                  id=\"container-typeahead\"\r\n                  labelKey={(option) => `${option.id} - ${option.name}`}\r\n                  options={containers}\r\n                  placeholder=\"Select containers...\"\r\n                  multiple\r\n                  selected={containers.filter(c =>\r\n                    currentSale.containerIds?.includes(c._id)\r\n                  )}\r\n                  onChange={(selected) => {\r\n                    setCurrentSale({\r\n                      ...currentSale,\r\n                      containerIds: selected.map(s => s._id)\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Form.Group>\r\n              \r\n          <Form.Group>\r\n            <Form.Label>Remarks</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={2}\r\n              value={currentSale.remarks}\r\n              onChange={(e) => setCurrentSale({ ...currentSale, remarks: e.target.value })}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={() => setShowModal(false)}>Cancel</Button>\r\n        <Button variant=\"primary\" onClick={handleSaveSale}>Save</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n\r\n      {/* Delete Confirmation Modal */}\r\n    <Modal show={showDeleteModal} onHide={() => setShowDeleteModal(false)}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Delete Sale</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        Are you sure you want to delete this sale?\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={() => setShowDeleteModal(false)}>Cancel</Button>\r\n        <Button variant=\"danger\" onClick={handleDeleteSale}>Delete</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n\r\n    {/* Add Multi Sales Modal */}\r\n    <Modal show={showMultiAddModal} onHide={() => setShowMultiAddModal(false)}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Add Multiple Sales</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label>Enter multiple sales (one per line, semicolon-separated fields: date;customer name;type;quantity;total amount;payment method;status;containers;remarks)</Form.Label>\r\n                    {importProgress > 0 && (\r\n                      <div className=\"my-2\">\r\n                        <div className=\"progress\">\r\n                          <div\r\n                            className=\"progress-bar progress-bar-striped progress-bar-animated\"\r\n                            role=\"progressbar\"\r\n                            style={{ width: `${importProgress}%` }}\r\n                            aria-valuenow={importProgress}\r\n                            aria-valuemin=\"0\"\r\n                            aria-valuemax=\"100\"\r\n                          >\r\n                            {importProgress}%\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}                        \r\n                    <Form.Control as=\"textarea\" rows={10} value={multiSalesInput} onChange={(e) => setMultiSalesInput(e.target.value)} />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" className=\"mt-2\" onClick={handleMultiSalesImport}>Import Sales</Button>\r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={() => setShowMultiAddModal(false)}>Close</Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n\r\n    {/* Multi Add Result Modal */}\r\n    <Modal show={showImportResultModal} onHide={() => setShowImportResultModal(false)}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Import Result</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {importResult.failedLine\r\n          ? <>\r\n              <p>✅ Successfully added: {importResult.successCount}</p>\r\n              <p>❌ Failed at line: {importResult.failedLine}</p>\r\n              <p>Error: {importResult.errorMessage}</p>\r\n            </>\r\n          : <p>✅ All records successfully imported! Total added: {importResult.successCount}</p>}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button \r\n            variant=\"primary\" \r\n            onClick={() => {\r\n                setShowImportResultModal(false);\r\n                setShowMultiAddModal(false);\r\n                setImportProgress(0);\r\n            }}\r\n        >\r\n          Close\r\n        </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n\r\n    {/* Add Delete Selected Modal */}\r\n    <Modal show={showDeleteSelectedModal} onHide={() => setShowDeleteSelectedModal(false)}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Confirm Delete Selected</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        Are you sure you want to delete {selectedSalesIds.length} selected sale{selectedSalesIds.length > 1 ? 's' : ''}?\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={() => setShowDeleteSelectedModal(false)}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          variant=\"danger\"\r\n          onClick={async () => {\r\n            try {\r\n              setShowDeleteSelectedModal(false);\r\n              setDeleting(true);\r\n              setDeleteProgress(0);\r\n            \r\n              for (let i = 0; i < selectedSalesIds.length; i++) {\r\n                const id = selectedSalesIds[i];\r\n                await axios.delete(`http://localhost:3001/api/sales/${id}`);\r\n                setDeleteProgress(Math.round(((i + 1) / selectedSalesIds.length) * 100));\r\n              }\r\n          \r\n              setDeleteSuccess(true);\r\n              setTimeout(() => setDeleteSuccess(false), 3000);\r\n          \r\n              fetchSales();\r\n              setSelectedSalesIds([]);\r\n              setCheckAll(false);\r\n            } catch (err) {\r\n              console.error(err);\r\n              alert('Error deleting selected sales.');\r\n            } finally {\r\n              setDeleting(false);\r\n              setDeleteProgress(0);\r\n            }\r\n          }}\r\n        >\r\n          Confirm Delete\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n\r\n    {/* Add New Customer Modal */}\r\n<Modal show={showAddCustomerModal} onHide={() => setShowAddCustomerModal(false)}>\r\n  <Modal.Header closeButton>\r\n    <Modal.Title>Add Customer</Modal.Title>\r\n  </Modal.Header>\r\n  <Modal.Body>\r\n    <Form>\r\n      <Form.Group>\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          value={currentCustomer.name || ''}\r\n          onChange={(e) =>\r\n            setCurrentCustomer({ ...currentCustomer, name: e.target.value })\r\n          }\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Nickname</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          value={currentCustomer.nickname || ''}\r\n          onChange={(e) =>\r\n            setCurrentCustomer({ ...currentCustomer, nickname: e.target.value })\r\n          }\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Phone</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          value={currentCustomer.phone || ''}\r\n          onChange={(e) =>\r\n            setCurrentCustomer({ ...currentCustomer, phone: e.target.value })\r\n          }\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Address</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          value={currentCustomer.address || ''}\r\n          onChange={(e) =>\r\n            setCurrentCustomer({ ...currentCustomer, address: e.target.value })\r\n          }\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Landmark</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          value={currentCustomer.landmark || ''}\r\n          onChange={(e) =>\r\n            setCurrentCustomer({ ...currentCustomer, landmark: e.target.value })\r\n          }\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Frequency</Form.Label>\r\n        <Form.Control\r\n          type=\"number\"\r\n          value={currentCustomer.frequency || ''}\r\n          onChange={(e) =>\r\n            setCurrentCustomer({ ...currentCustomer, frequency: e.target.value })\r\n          }\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Birthday</Form.Label>\r\n        <Form.Control\r\n          type=\"date\"\r\n          value={currentCustomer.birthday || ''}\r\n          onChange={(e) =>\r\n            setCurrentCustomer({ ...currentCustomer, birthday: e.target.value })\r\n          }\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Last Transaction Date</Form.Label>\r\n        <Form.Control\r\n          type=\"date\"\r\n          value={currentCustomer.lastTransactionDate || ''}\r\n          onChange={(e) =>\r\n            setCurrentCustomer({\r\n              ...currentCustomer,\r\n              lastTransactionDate: e.target.value,\r\n            })\r\n          }\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Remarks</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={2}\r\n          value={currentCustomer.remarks || ''}\r\n          onChange={(e) =>\r\n            setCurrentCustomer({ ...currentCustomer, remarks: e.target.value })\r\n          }\r\n        />\r\n      </Form.Group>\r\n    </Form>\r\n  </Modal.Body>\r\n  <Modal.Footer>\r\n    <Button variant=\"secondary\" onClick={() => setShowAddCustomerModal(false)}>\r\n      Cancel\r\n    </Button>\r\n    <Button variant=\"primary\" onClick={handleAddCustomer}>\r\n      Save\r\n    </Button>\r\n  </Modal.Footer>\r\n</Modal>\r\n\r\n<Modal show={showSuccessModal} onHide={() => setShowSuccessModal(false)}>\r\n  <Modal.Header closeButton>\r\n    <Modal.Title>Success</Modal.Title>\r\n  </Modal.Header>\r\n  <Modal.Body>\r\n    <p>{successMessage}</p>\r\n  </Modal.Body>\r\n  <Modal.Footer>\r\n    <Button variant=\"primary\" onClick={() => {\r\n  setShowSuccessModal(false);\r\n  fetchSales(); // refresh when modal is closed\r\n}}>\r\n  OK\r\n</Button>\r\n  </Modal.Footer>\r\n</Modal>\r\n\r\n             \r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sales;\r\n\r\n/*\r\n2025-07-22;Test Customer 1;Walk-In;Refill (Round 5gal);1;25;Cash;Paid;z1, R023;Scenario #1 test\r\n2025-07-22;Test Customer 2;Walk-In;Refill (Slim 5gal);1;25;Cash;Paid;z1, S052;Scenario #2 test\r\n2025-07-22;Test Customer 2.1;Walk-In;Refill (Slim 5gal);1;25;Cash;Paid;z6, S069, S042, S245;Scenario #2 test\r\n2025-07-22;Test Customer 2.2;Walk-In;Refill (Slim 5gal);1;25;Cash;Paid;z3, R069, R042, R245;Scenario #2 test\r\n2025-07-22;Test Customer 3;Walk-In;Refill (Slim 5gal);4;100;Cash;Paid;2, 005, 07, 99;Scenario #3 Slim test\r\n2025-07-22;Test Customer 4;Walk-In;Refill (Round 5gal);4;100;Cash;Paid;2, 005, 07, 99;Scenario #3 Round test\r\n2025-07-22;Test Customer 5;Walk-In;Dispenser;1;500;Cash;Paid;D04;Scenario #4 test \r\n2025-07-22;Test Customer 6;Walk-In;Refill (Slim 5gal);8;200;Cash;Paid;z5, s?, s?, s?;Scenario #5 test \r\n\r\n\r\n\r\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}