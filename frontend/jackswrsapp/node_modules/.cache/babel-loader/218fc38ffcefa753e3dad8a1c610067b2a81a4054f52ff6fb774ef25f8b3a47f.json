{"ast":null,"code":"var _jsxFileName = \"D:\\\\GameProjects\\\\JacksWRS App\\\\frontend\\\\jackswrsapp\\\\src\\\\pages\\\\Customers.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Customers() {\n  _s();\n  // ===========================\n  // STATE MANAGEMENT\n  // ===========================\n  const [customers, setCustomers] = useState([]); // stores all customers from DB\n  const [showModal, setShowModal] = useState(false); // controls Add/Edit modal visibility\n  const [showDeleteModal, setShowDeleteModal] = useState(false); // controls Delete modal visibility\n  const [showImportModal, setShowImportModal] = useState(false); // controls Import modal visibility\n\n  const [currentCustomer, setCurrentCustomer] = useState({\n    name: '',\n    phone: '',\n    address: '',\n    birthday: '',\n    remarks: ''\n  }); // stores current customer for Add/Edit\n\n  const [isEditing, setIsEditing] = useState(false); // flag to determine if editing\n\n  const [customerToDelete, setCustomerToDelete] = useState(null); // customer selected for delete\n\n  const [pastedCSV, setPastedCSV] = useState(''); // stores pasted CSV content\n  const [csvFile, setCsvFile] = useState(null); // stores uploaded CSV file\n\n  // ===========================\n  // FETCH ALL CUSTOMERS ON LOAD\n  // ===========================\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n  const fetchCustomers = async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/api/customers');\n      setCustomers(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // ===========================\n  // ADD / EDIT CUSTOMER\n  // ===========================\n  const handleShowAddModal = () => {\n    setIsEditing(false);\n    setCurrentCustomer({\n      name: '',\n      phone: '',\n      address: '',\n      birthday: '',\n      remarks: ''\n    });\n    setShowModal(true);\n  };\n  const handleShowEditModal = customer => {\n    setIsEditing(true);\n    // Format birthday to yyyy-mm-dd for input\n    setCurrentCustomer({\n      ...customer,\n      birthday: customer.birthday ? customer.birthday.substring(0, 10) : ''\n    });\n    setShowModal(true);\n  };\n  const handleSaveCustomer = async () => {\n    try {\n      if (isEditing) {\n        // UPDATE customer\n        await axios.put(`http://localhost:3001/api/customers/${currentCustomer._id}`, currentCustomer);\n      } else {\n        // ADD new customer\n        await axios.post('http://localhost:3001/api/customers', currentCustomer);\n      }\n      setShowModal(false);\n      fetchCustomers();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // ===========================\n  // DELETE CUSTOMER\n  // ===========================\n  const handleDeleteClick = customer => {\n    setCustomerToDelete(customer);\n    setShowDeleteModal(true);\n  };\n  const handleDeleteCustomer = async () => {\n    try {\n      await axios.delete(`http://localhost:3001/api/customers/${customerToDelete._id}`);\n      setShowDeleteModal(false);\n      setCustomerToDelete(null);\n      fetchCustomers();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // ===========================\n  // EXPORT CUSTOMERS AS CSV\n  // ===========================\n  const handleExportCSV = () => {\n    // Convert customers array to CSV string\n    const csv = Papa.unparse(customers.map(c => ({\n      name: c.name,\n      phone: c.phone,\n      address: c.address,\n      birthday: c.birthday,\n      createdAt: c.createdAt,\n      remarks: c.remarks\n    })));\n    // Create download link\n    const blob = new Blob([csv], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'customers.csv');\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // ===========================\n  // IMPORT CUSTOMERS FROM PASTED CSV CONTENT\n  // ===========================\n  const handlePasteImport = async () => {\n    Papa.parse(pastedCSV, {\n      header: true,\n      complete: async results => {\n        console.log('Parsed pasted CSV:', results.data);\n        try {\n          for (const customer of results.data) {\n            if (customer.name) {\n              // only save if name exists\n              await axios.post('http://localhost:3001/api/customers', customer);\n            }\n          }\n          setShowImportModal(false);\n          setPastedCSV('');\n          fetchCustomers();\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    });\n  };\n\n  // ===========================\n  // IMPORT CUSTOMERS FROM CSV FILE UPLOAD\n  // ===========================\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      complete: async results => {\n        console.log('Parsed CSV File:', results.data);\n        try {\n          for (const customer of results.data) {\n            if (customer.name) {\n              await axios.post('http://localhost:3001/api/customers', customer);\n            }\n          }\n          fetchCustomers();\n          setShowImportModal(false);\n          setCsvFile(null);\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    });\n  };\n\n  // ===========================\n  // COMPONENT RENDER\n  // ===========================\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Customers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShowAddModal,\n      children: \"Add Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      onClick: handleExportCSV,\n      children: \"Export CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"secondary\",\n      onClick: () => setShowImportModal(true),\n      children: \"Import CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Birthday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Remarks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: customers.map(c => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: c.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: c.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: c.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: c.birthday ? new Date(c.birthday).toLocaleDateString() : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: c.createdAt ? new Date(c.createdAt).toLocaleDateString() : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: c.remarks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"warning\",\n              size: \"sm\",\n              onClick: () => handleShowEditModal(c),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              size: \"sm\",\n              onClick: () => handleDeleteClick(c),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)]\n        }, c._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showImportModal,\n      onHide: () => setShowImportModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Import Customers from CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Upload CSV File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              accept: \".csv\",\n              onChange: handleFileUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Paste CSV Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 5,\n              value: pastedCSV,\n              onChange: e => setPastedCSV(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handlePasteImport,\n            children: \"Import Pasted Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowImportModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => setShowModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: isEditing ? 'Edit Customer' : 'Add Customer'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: currentCustomer.name,\n              onChange: e => setCurrentCustomer({\n                ...currentCustomer,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: currentCustomer.phone,\n              onChange: e => setCurrentCustomer({\n                ...currentCustomer,\n                phone: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: currentCustomer.address,\n              onChange: e => setCurrentCustomer({\n                ...currentCustomer,\n                address: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Birthday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              value: currentCustomer.birthday,\n              onChange: e => setCurrentCustomer({\n                ...currentCustomer,\n                birthday: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Remarks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 2,\n              value: currentCustomer.remarks,\n              onChange: e => setCurrentCustomer({\n                ...currentCustomer,\n                remarks: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSaveCustomer,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showDeleteModal,\n      onHide: () => setShowDeleteModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Delete Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [\"Are you sure you want to delete \", customerToDelete === null || customerToDelete === void 0 ? void 0 : customerToDelete.name, \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowDeleteModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: handleDeleteCustomer,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(Customers, \"byOCGKfOa4j48cssPezly45S1ts=\");\n_c = Customers;\nexport default Customers;\nvar _c;\n$RefreshReg$(_c, \"Customers\");","map":{"version":3,"names":["React","useEffect","useState","axios","Modal","Button","Form","Papa","jsxDEV","_jsxDEV","Customers","_s","customers","setCustomers","showModal","setShowModal","showDeleteModal","setShowDeleteModal","showImportModal","setShowImportModal","currentCustomer","setCurrentCustomer","name","phone","address","birthday","remarks","isEditing","setIsEditing","customerToDelete","setCustomerToDelete","pastedCSV","setPastedCSV","csvFile","setCsvFile","fetchCustomers","res","get","data","err","console","error","handleShowAddModal","handleShowEditModal","customer","substring","handleSaveCustomer","put","_id","post","handleDeleteClick","handleDeleteCustomer","delete","handleExportCSV","csv","unparse","map","c","createdAt","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","handlePasteImport","parse","header","complete","results","log","handleFileUpload","e","file","target","files","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","className","Date","toLocaleDateString","size","show","onHide","Header","closeButton","Title","Body","Group","Label","Control","accept","onChange","as","rows","value","Footer","_c","$RefreshReg$"],"sources":["D:/GameProjects/JacksWRS App/frontend/jackswrsapp/src/pages/Customers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport Papa from 'papaparse';\r\n\r\nfunction Customers() {\r\n  // ===========================\r\n  // STATE MANAGEMENT\r\n  // ===========================\r\n  const [customers, setCustomers] = useState([]); // stores all customers from DB\r\n  const [showModal, setShowModal] = useState(false); // controls Add/Edit modal visibility\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false); // controls Delete modal visibility\r\n  const [showImportModal, setShowImportModal] = useState(false); // controls Import modal visibility\r\n\r\n  const [currentCustomer, setCurrentCustomer] = useState({\r\n    name: '', phone: '', address: '', birthday: '', remarks: ''\r\n  }); // stores current customer for Add/Edit\r\n\r\n  const [isEditing, setIsEditing] = useState(false); // flag to determine if editing\r\n\r\n  const [customerToDelete, setCustomerToDelete] = useState(null); // customer selected for delete\r\n\r\n  const [pastedCSV, setPastedCSV] = useState(''); // stores pasted CSV content\r\n  const [csvFile, setCsvFile] = useState(null); // stores uploaded CSV file\r\n\r\n  // ===========================\r\n  // FETCH ALL CUSTOMERS ON LOAD\r\n  // ===========================\r\n  useEffect(() => {\r\n    fetchCustomers();\r\n  }, []);\r\n\r\n  const fetchCustomers = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:3001/api/customers');\r\n      setCustomers(res.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // ===========================\r\n  // ADD / EDIT CUSTOMER\r\n  // ===========================\r\n  const handleShowAddModal = () => {\r\n    setIsEditing(false);\r\n    setCurrentCustomer({ name: '', phone: '', address: '', birthday: '', remarks: '' });\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleShowEditModal = (customer) => {\r\n    setIsEditing(true);\r\n    // Format birthday to yyyy-mm-dd for input\r\n    setCurrentCustomer({ ...customer, birthday: customer.birthday ? customer.birthday.substring(0,10) : '' });\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleSaveCustomer = async () => {\r\n    try {\r\n      if (isEditing) {\r\n        // UPDATE customer\r\n        await axios.put(`http://localhost:3001/api/customers/${currentCustomer._id}`, currentCustomer);\r\n      } else {\r\n        // ADD new customer\r\n        await axios.post('http://localhost:3001/api/customers', currentCustomer);\r\n      }\r\n      setShowModal(false);\r\n      fetchCustomers();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // ===========================\r\n  // DELETE CUSTOMER\r\n  // ===========================\r\n  const handleDeleteClick = (customer) => {\r\n    setCustomerToDelete(customer);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  const handleDeleteCustomer = async () => {\r\n    try {\r\n      await axios.delete(`http://localhost:3001/api/customers/${customerToDelete._id}`);\r\n      setShowDeleteModal(false);\r\n      setCustomerToDelete(null);\r\n      fetchCustomers();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // ===========================\r\n  // EXPORT CUSTOMERS AS CSV\r\n  // ===========================\r\n  const handleExportCSV = () => {\r\n    // Convert customers array to CSV string\r\n    const csv = Papa.unparse(customers.map(c => ({\r\n      name: c.name,\r\n      phone: c.phone,\r\n      address: c.address,\r\n      birthday: c.birthday,\r\n      createdAt: c.createdAt,\r\n      remarks: c.remarks\r\n    })));\r\n    // Create download link\r\n    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.setAttribute('download', 'customers.csv');\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  // ===========================\r\n  // IMPORT CUSTOMERS FROM PASTED CSV CONTENT\r\n  // ===========================\r\n  const handlePasteImport = async () => {\r\n    Papa.parse(pastedCSV, {\r\n      header: true,\r\n      complete: async (results) => {\r\n        console.log('Parsed pasted CSV:', results.data);\r\n        try {\r\n          for (const customer of results.data) {\r\n            if (customer.name) { // only save if name exists\r\n              await axios.post('http://localhost:3001/api/customers', customer);\r\n            }\r\n          }\r\n          setShowImportModal(false);\r\n          setPastedCSV('');\r\n          fetchCustomers();\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  // ===========================\r\n  // IMPORT CUSTOMERS FROM CSV FILE UPLOAD\r\n  // ===========================\r\n  const handleFileUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    Papa.parse(file, {\r\n      header: true,\r\n      complete: async (results) => {\r\n        console.log('Parsed CSV File:', results.data);\r\n        try {\r\n          for (const customer of results.data) {\r\n            if (customer.name) {\r\n              await axios.post('http://localhost:3001/api/customers', customer);\r\n            }\r\n          }\r\n          fetchCustomers();\r\n          setShowImportModal(false);\r\n          setCsvFile(null);\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  // ===========================\r\n  // COMPONENT RENDER\r\n  // ===========================\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>Customers</h2>\r\n\r\n      {/* ACTION BUTTONS */}\r\n      <Button variant=\"primary\" onClick={handleShowAddModal}>Add Customer</Button>{' '}\r\n      <Button variant=\"success\" onClick={handleExportCSV}>Export CSV</Button>{' '}\r\n      <Button variant=\"secondary\" onClick={() => setShowImportModal(true)}>Import CSV</Button>\r\n\r\n      {/* CUSTOMERS TABLE */}\r\n      <table className=\"table mt-3\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Phone</th>\r\n            <th>Address</th>\r\n            <th>Birthday</th>\r\n            <th>Created At</th>\r\n            <th>Remarks</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {customers.map(c => (\r\n            <tr key={c._id}>\r\n              <td>{c.name}</td>\r\n              <td>{c.phone}</td>\r\n              <td>{c.address}</td>\r\n              <td>{c.birthday ? new Date(c.birthday).toLocaleDateString() : ''}</td>\r\n              <td>{c.createdAt ? new Date(c.createdAt).toLocaleDateString() : ''}</td>\r\n              <td>{c.remarks}</td>\r\n              <td>\r\n                <Button variant=\"warning\" size=\"sm\" onClick={() => handleShowEditModal(c)}>Edit</Button>{' '}\r\n                <Button variant=\"danger\" size=\"sm\" onClick={() => handleDeleteClick(c)}>Delete</Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* IMPORT MODAL */}\r\n      <Modal show={showImportModal} onHide={() => setShowImportModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Import Customers from CSV</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Upload CSV File</Form.Label>\r\n              <Form.Control type=\"file\" accept=\".csv\" onChange={handleFileUpload} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Paste CSV Content</Form.Label>\r\n              <Form.Control as=\"textarea\" rows={5} value={pastedCSV} onChange={(e) => setPastedCSV(e.target.value)} />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" onClick={handlePasteImport}>Import Pasted Content</Button>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowImportModal(false)}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* ADD / EDIT MODAL */}\r\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{isEditing ? 'Edit Customer' : 'Add Customer'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control type=\"text\" value={currentCustomer.name} onChange={(e) => setCurrentCustomer({ ...currentCustomer, name: e.target.value })} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Phone</Form.Label>\r\n              <Form.Control type=\"text\" value={currentCustomer.phone} onChange={(e) => setCurrentCustomer({ ...currentCustomer, phone: e.target.value })} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Address</Form.Label>\r\n              <Form.Control type=\"text\" value={currentCustomer.address} onChange={(e) => setCurrentCustomer({ ...currentCustomer, address: e.target.value })} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Birthday</Form.Label>\r\n              <Form.Control type=\"date\" value={currentCustomer.birthday} onChange={(e) => setCurrentCustomer({ ...currentCustomer, birthday: e.target.value })} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Remarks</Form.Label>\r\n              <Form.Control as=\"textarea\" rows={2} value={currentCustomer.remarks} onChange={(e) => setCurrentCustomer({ ...currentCustomer, remarks: e.target.value })} />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>Cancel</Button>\r\n          <Button variant=\"primary\" onClick={handleSaveCustomer}>Save</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* DELETE CONFIRMATION MODAL */}\r\n      <Modal show={showDeleteModal} onHide={() => setShowDeleteModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Customer</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Are you sure you want to delete {customerToDelete?.name}?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowDeleteModal(false)}>Cancel</Button>\r\n          <Button variant=\"danger\" onClick={handleDeleteCustomer}>Delete</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Customers;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}